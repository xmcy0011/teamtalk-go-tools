// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/proto/include/IM.BaseDefine.proto

package im_protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// service id 消息大分类
type ServiceID int32

const (
	ServiceID_SID_UNKNOWN        ServiceID = 0
	ServiceID_SID_LOGIN          ServiceID = 1
	ServiceID_SID_BUDDY_LIST     ServiceID = 2
	ServiceID_SID_MSG            ServiceID = 3
	ServiceID_SID_GROUP          ServiceID = 4
	ServiceID_SID_FILE           ServiceID = 5
	ServiceID_SID_SWITCH_SERVICE ServiceID = 6
	ServiceID_SID_OTHER          ServiceID = 7
	ServiceID_SID_INTERNAL       ServiceID = 8
)

var ServiceID_name = map[int32]string{
	0: "SID_UNKNOWN",
	1: "SID_LOGIN",
	2: "SID_BUDDY_LIST",
	3: "SID_MSG",
	4: "SID_GROUP",
	5: "SID_FILE",
	6: "SID_SWITCH_SERVICE",
	7: "SID_OTHER",
	8: "SID_INTERNAL",
}

var ServiceID_value = map[string]int32{
	"SID_UNKNOWN":        0,
	"SID_LOGIN":          1,
	"SID_BUDDY_LIST":     2,
	"SID_MSG":            3,
	"SID_GROUP":          4,
	"SID_FILE":           5,
	"SID_SWITCH_SERVICE": 6,
	"SID_OTHER":          7,
	"SID_INTERNAL":       8,
}

func (x ServiceID) String() string {
	return proto.EnumName(ServiceID_name, int32(x))
}

func (ServiceID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{0}
}

// 登录相关消息定义
type LoginCmdID int32

const (
	LoginCmdID_CID_LOGIN_UNKNOWN               LoginCmdID = 0
	LoginCmdID_CID_LOGIN_REQ_MSGSERVER         LoginCmdID = 257
	LoginCmdID_CID_LOGIN_RES_MSGSERVER         LoginCmdID = 258
	LoginCmdID_CID_LOGIN_REQ_USERLOGIN         LoginCmdID = 259
	LoginCmdID_CID_LOGIN_RES_USERLOGIN         LoginCmdID = 260
	LoginCmdID_CID_LOGIN_REQ_LOGINOUT          LoginCmdID = 261
	LoginCmdID_CID_LOGIN_RES_LOGINOUT          LoginCmdID = 262
	LoginCmdID_CID_LOGIN_KICK_USER             LoginCmdID = 263
	LoginCmdID_CID_LOGIN_REQ_DEVICETOKEN       LoginCmdID = 264
	LoginCmdID_CID_LOGIN_RES_DEVICETOKEN       LoginCmdID = 265
	LoginCmdID_CID_LOGIN_REQ_KICKPCCLIENT      LoginCmdID = 266
	LoginCmdID_CID_LOGIN_RES_KICKPCCLIENT      LoginCmdID = 267
	LoginCmdID_CID_LOGIN_REQ_PUSH_SHIELD       LoginCmdID = 268
	LoginCmdID_CID_LOGIN_RES_PUSH_SHIELD       LoginCmdID = 269
	LoginCmdID_CID_LOGIN_REQ_QUERY_PUSH_SHIELD LoginCmdID = 270
	LoginCmdID_CID_LOGIN_RES_QUERY_PUSH_SHIELD LoginCmdID = 271
)

var LoginCmdID_name = map[int32]string{
	0:   "CID_LOGIN_UNKNOWN",
	257: "CID_LOGIN_REQ_MSGSERVER",
	258: "CID_LOGIN_RES_MSGSERVER",
	259: "CID_LOGIN_REQ_USERLOGIN",
	260: "CID_LOGIN_RES_USERLOGIN",
	261: "CID_LOGIN_REQ_LOGINOUT",
	262: "CID_LOGIN_RES_LOGINOUT",
	263: "CID_LOGIN_KICK_USER",
	264: "CID_LOGIN_REQ_DEVICETOKEN",
	265: "CID_LOGIN_RES_DEVICETOKEN",
	266: "CID_LOGIN_REQ_KICKPCCLIENT",
	267: "CID_LOGIN_RES_KICKPCCLIENT",
	268: "CID_LOGIN_REQ_PUSH_SHIELD",
	269: "CID_LOGIN_RES_PUSH_SHIELD",
	270: "CID_LOGIN_REQ_QUERY_PUSH_SHIELD",
	271: "CID_LOGIN_RES_QUERY_PUSH_SHIELD",
}

var LoginCmdID_value = map[string]int32{
	"CID_LOGIN_UNKNOWN":               0,
	"CID_LOGIN_REQ_MSGSERVER":         257,
	"CID_LOGIN_RES_MSGSERVER":         258,
	"CID_LOGIN_REQ_USERLOGIN":         259,
	"CID_LOGIN_RES_USERLOGIN":         260,
	"CID_LOGIN_REQ_LOGINOUT":          261,
	"CID_LOGIN_RES_LOGINOUT":          262,
	"CID_LOGIN_KICK_USER":             263,
	"CID_LOGIN_REQ_DEVICETOKEN":       264,
	"CID_LOGIN_RES_DEVICETOKEN":       265,
	"CID_LOGIN_REQ_KICKPCCLIENT":      266,
	"CID_LOGIN_RES_KICKPCCLIENT":      267,
	"CID_LOGIN_REQ_PUSH_SHIELD":       268,
	"CID_LOGIN_RES_PUSH_SHIELD":       269,
	"CID_LOGIN_REQ_QUERY_PUSH_SHIELD": 270,
	"CID_LOGIN_RES_QUERY_PUSH_SHIELD": 271,
}

func (x LoginCmdID) String() string {
	return proto.EnumName(LoginCmdID_name, int32(x))
}

func (LoginCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{1}
}

// 列表相关消息定义
type BuddyListCmdID int32

const (
	BuddyListCmdID_CID_BUDDY_LIST_UNKNOWN                         BuddyListCmdID = 0
	BuddyListCmdID_CID_BUDDY_LIST_RECENT_CONTACT_SESSION_REQUEST  BuddyListCmdID = 513
	BuddyListCmdID_CID_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPONSE BuddyListCmdID = 514
	BuddyListCmdID_CID_BUDDY_LIST_STATUS_NOTIFY                   BuddyListCmdID = 515
	BuddyListCmdID_CID_BUDDY_LIST_USER_INFO_REQUEST               BuddyListCmdID = 516
	BuddyListCmdID_CID_BUDDY_LIST_USER_INFO_RESPONSE              BuddyListCmdID = 517
	BuddyListCmdID_CID_BUDDY_LIST_REMOVE_SESSION_REQ              BuddyListCmdID = 518
	BuddyListCmdID_CID_BUDDY_LIST_REMOVE_SESSION_RES              BuddyListCmdID = 519
	BuddyListCmdID_CID_BUDDY_LIST_ALL_USER_REQUEST                BuddyListCmdID = 520
	BuddyListCmdID_CID_BUDDY_LIST_ALL_USER_RESPONSE               BuddyListCmdID = 521
	BuddyListCmdID_CID_BUDDY_LIST_USERS_STATUS_REQUEST            BuddyListCmdID = 522
	BuddyListCmdID_CID_BUDDY_LIST_USERS_STATUS_RESPONSE           BuddyListCmdID = 523
	BuddyListCmdID_CID_BUDDY_LIST_CHANGE_AVATAR_REQUEST           BuddyListCmdID = 524
	BuddyListCmdID_CID_BUDDY_LIST_CHANGE_AVATAR_RESPONSE          BuddyListCmdID = 525
	BuddyListCmdID_CID_BUDDY_LIST_PC_LOGIN_STATUS_NOTIFY          BuddyListCmdID = 526
	BuddyListCmdID_CID_BUDDY_LIST_REMOVE_SESSION_NOTIFY           BuddyListCmdID = 527
	BuddyListCmdID_CID_BUDDY_LIST_DEPARTMENT_REQUEST              BuddyListCmdID = 528
	BuddyListCmdID_CID_BUDDY_LIST_DEPARTMENT_RESPONSE             BuddyListCmdID = 529
	BuddyListCmdID_CID_BUDDY_LIST_AVATAR_CHANGED_NOTIFY           BuddyListCmdID = 530
	BuddyListCmdID_CID_BUDDY_LIST_CHANGE_SIGN_INFO_REQUEST        BuddyListCmdID = 531
	BuddyListCmdID_CID_BUDDY_LIST_CHANGE_SIGN_INFO_RESPONSE       BuddyListCmdID = 532
	BuddyListCmdID_CID_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY        BuddyListCmdID = 533
)

var BuddyListCmdID_name = map[int32]string{
	0:   "CID_BUDDY_LIST_UNKNOWN",
	513: "CID_BUDDY_LIST_RECENT_CONTACT_SESSION_REQUEST",
	514: "CID_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPONSE",
	515: "CID_BUDDY_LIST_STATUS_NOTIFY",
	516: "CID_BUDDY_LIST_USER_INFO_REQUEST",
	517: "CID_BUDDY_LIST_USER_INFO_RESPONSE",
	518: "CID_BUDDY_LIST_REMOVE_SESSION_REQ",
	519: "CID_BUDDY_LIST_REMOVE_SESSION_RES",
	520: "CID_BUDDY_LIST_ALL_USER_REQUEST",
	521: "CID_BUDDY_LIST_ALL_USER_RESPONSE",
	522: "CID_BUDDY_LIST_USERS_STATUS_REQUEST",
	523: "CID_BUDDY_LIST_USERS_STATUS_RESPONSE",
	524: "CID_BUDDY_LIST_CHANGE_AVATAR_REQUEST",
	525: "CID_BUDDY_LIST_CHANGE_AVATAR_RESPONSE",
	526: "CID_BUDDY_LIST_PC_LOGIN_STATUS_NOTIFY",
	527: "CID_BUDDY_LIST_REMOVE_SESSION_NOTIFY",
	528: "CID_BUDDY_LIST_DEPARTMENT_REQUEST",
	529: "CID_BUDDY_LIST_DEPARTMENT_RESPONSE",
	530: "CID_BUDDY_LIST_AVATAR_CHANGED_NOTIFY",
	531: "CID_BUDDY_LIST_CHANGE_SIGN_INFO_REQUEST",
	532: "CID_BUDDY_LIST_CHANGE_SIGN_INFO_RESPONSE",
	533: "CID_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY",
}

var BuddyListCmdID_value = map[string]int32{
	"CID_BUDDY_LIST_UNKNOWN":                         0,
	"CID_BUDDY_LIST_RECENT_CONTACT_SESSION_REQUEST":  513,
	"CID_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPONSE": 514,
	"CID_BUDDY_LIST_STATUS_NOTIFY":                   515,
	"CID_BUDDY_LIST_USER_INFO_REQUEST":               516,
	"CID_BUDDY_LIST_USER_INFO_RESPONSE":              517,
	"CID_BUDDY_LIST_REMOVE_SESSION_REQ":              518,
	"CID_BUDDY_LIST_REMOVE_SESSION_RES":              519,
	"CID_BUDDY_LIST_ALL_USER_REQUEST":                520,
	"CID_BUDDY_LIST_ALL_USER_RESPONSE":               521,
	"CID_BUDDY_LIST_USERS_STATUS_REQUEST":            522,
	"CID_BUDDY_LIST_USERS_STATUS_RESPONSE":           523,
	"CID_BUDDY_LIST_CHANGE_AVATAR_REQUEST":           524,
	"CID_BUDDY_LIST_CHANGE_AVATAR_RESPONSE":          525,
	"CID_BUDDY_LIST_PC_LOGIN_STATUS_NOTIFY":          526,
	"CID_BUDDY_LIST_REMOVE_SESSION_NOTIFY":           527,
	"CID_BUDDY_LIST_DEPARTMENT_REQUEST":              528,
	"CID_BUDDY_LIST_DEPARTMENT_RESPONSE":             529,
	"CID_BUDDY_LIST_AVATAR_CHANGED_NOTIFY":           530,
	"CID_BUDDY_LIST_CHANGE_SIGN_INFO_REQUEST":        531,
	"CID_BUDDY_LIST_CHANGE_SIGN_INFO_RESPONSE":       532,
	"CID_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY":        533,
}

func (x BuddyListCmdID) String() string {
	return proto.EnumName(BuddyListCmdID_name, int32(x))
}

func (BuddyListCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{2}
}

// 富文本消息相关
type MessageCmdID int32

const (
	MessageCmdID_CID_MSG_UNKNOWN               MessageCmdID = 0
	MessageCmdID_CID_MSG_DATA                  MessageCmdID = 769
	MessageCmdID_CID_MSG_DATA_ACK              MessageCmdID = 770
	MessageCmdID_CID_MSG_READ_ACK              MessageCmdID = 771
	MessageCmdID_CID_MSG_READ_NOTIFY           MessageCmdID = 772
	MessageCmdID_CID_MSG_TIME_REQUEST          MessageCmdID = 773
	MessageCmdID_CID_MSG_TIME_RESPONSE         MessageCmdID = 774
	MessageCmdID_CID_MSG_UNREAD_CNT_REQUEST    MessageCmdID = 775
	MessageCmdID_CID_MSG_UNREAD_CNT_RESPONSE   MessageCmdID = 776
	MessageCmdID_CID_MSG_LIST_REQUEST          MessageCmdID = 777
	MessageCmdID_CID_MSG_LIST_RESPONSE         MessageCmdID = 778
	MessageCmdID_CID_MSG_GET_LATEST_MSG_ID_REQ MessageCmdID = 779
	MessageCmdID_CID_MSG_GET_LATEST_MSG_ID_RSP MessageCmdID = 780
	MessageCmdID_CID_MSG_GET_BY_MSG_ID_REQ     MessageCmdID = 781
	MessageCmdID_CID_MSG_GET_BY_MSG_ID_RES     MessageCmdID = 782
)

var MessageCmdID_name = map[int32]string{
	0:   "CID_MSG_UNKNOWN",
	769: "CID_MSG_DATA",
	770: "CID_MSG_DATA_ACK",
	771: "CID_MSG_READ_ACK",
	772: "CID_MSG_READ_NOTIFY",
	773: "CID_MSG_TIME_REQUEST",
	774: "CID_MSG_TIME_RESPONSE",
	775: "CID_MSG_UNREAD_CNT_REQUEST",
	776: "CID_MSG_UNREAD_CNT_RESPONSE",
	777: "CID_MSG_LIST_REQUEST",
	778: "CID_MSG_LIST_RESPONSE",
	779: "CID_MSG_GET_LATEST_MSG_ID_REQ",
	780: "CID_MSG_GET_LATEST_MSG_ID_RSP",
	781: "CID_MSG_GET_BY_MSG_ID_REQ",
	782: "CID_MSG_GET_BY_MSG_ID_RES",
}

var MessageCmdID_value = map[string]int32{
	"CID_MSG_UNKNOWN":               0,
	"CID_MSG_DATA":                  769,
	"CID_MSG_DATA_ACK":              770,
	"CID_MSG_READ_ACK":              771,
	"CID_MSG_READ_NOTIFY":           772,
	"CID_MSG_TIME_REQUEST":          773,
	"CID_MSG_TIME_RESPONSE":         774,
	"CID_MSG_UNREAD_CNT_REQUEST":    775,
	"CID_MSG_UNREAD_CNT_RESPONSE":   776,
	"CID_MSG_LIST_REQUEST":          777,
	"CID_MSG_LIST_RESPONSE":         778,
	"CID_MSG_GET_LATEST_MSG_ID_REQ": 779,
	"CID_MSG_GET_LATEST_MSG_ID_RSP": 780,
	"CID_MSG_GET_BY_MSG_ID_REQ":     781,
	"CID_MSG_GET_BY_MSG_ID_RES":     782,
}

func (x MessageCmdID) String() string {
	return proto.EnumName(MessageCmdID_name, int32(x))
}

func (MessageCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{3}
}

// 群组相关定义
type GroupCmdID int32

const (
	GroupCmdID_CID_GROUP_UNKNOWN                GroupCmdID = 0
	GroupCmdID_CID_GROUP_NORMAL_LIST_REQUEST    GroupCmdID = 1025
	GroupCmdID_CID_GROUP_NORMAL_LIST_RESPONSE   GroupCmdID = 1026
	GroupCmdID_CID_GROUP_INFO_REQUEST           GroupCmdID = 1027
	GroupCmdID_CID_GROUP_INFO_RESPONSE          GroupCmdID = 1028
	GroupCmdID_CID_GROUP_CREATE_REQUEST         GroupCmdID = 1029
	GroupCmdID_CID_GROUP_CREATE_RESPONSE        GroupCmdID = 1030
	GroupCmdID_CID_GROUP_CHANGE_MEMBER_REQUEST  GroupCmdID = 1031
	GroupCmdID_CID_GROUP_CHANGE_MEMBER_RESPONSE GroupCmdID = 1032
	GroupCmdID_CID_GROUP_SHIELD_GROUP_REQUEST   GroupCmdID = 1033
	GroupCmdID_CID_GROUP_SHIELD_GROUP_RESPONSE  GroupCmdID = 1034
	GroupCmdID_CID_GROUP_CHANGE_MEMBER_NOTIFY   GroupCmdID = 1035
)

var GroupCmdID_name = map[int32]string{
	0:    "CID_GROUP_UNKNOWN",
	1025: "CID_GROUP_NORMAL_LIST_REQUEST",
	1026: "CID_GROUP_NORMAL_LIST_RESPONSE",
	1027: "CID_GROUP_INFO_REQUEST",
	1028: "CID_GROUP_INFO_RESPONSE",
	1029: "CID_GROUP_CREATE_REQUEST",
	1030: "CID_GROUP_CREATE_RESPONSE",
	1031: "CID_GROUP_CHANGE_MEMBER_REQUEST",
	1032: "CID_GROUP_CHANGE_MEMBER_RESPONSE",
	1033: "CID_GROUP_SHIELD_GROUP_REQUEST",
	1034: "CID_GROUP_SHIELD_GROUP_RESPONSE",
	1035: "CID_GROUP_CHANGE_MEMBER_NOTIFY",
}

var GroupCmdID_value = map[string]int32{
	"CID_GROUP_UNKNOWN":                0,
	"CID_GROUP_NORMAL_LIST_REQUEST":    1025,
	"CID_GROUP_NORMAL_LIST_RESPONSE":   1026,
	"CID_GROUP_INFO_REQUEST":           1027,
	"CID_GROUP_INFO_RESPONSE":          1028,
	"CID_GROUP_CREATE_REQUEST":         1029,
	"CID_GROUP_CREATE_RESPONSE":        1030,
	"CID_GROUP_CHANGE_MEMBER_REQUEST":  1031,
	"CID_GROUP_CHANGE_MEMBER_RESPONSE": 1032,
	"CID_GROUP_SHIELD_GROUP_REQUEST":   1033,
	"CID_GROUP_SHIELD_GROUP_RESPONSE":  1034,
	"CID_GROUP_CHANGE_MEMBER_NOTIFY":   1035,
}

func (x GroupCmdID) String() string {
	return proto.EnumName(GroupCmdID_name, int32(x))
}

func (GroupCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{4}
}

// 文件相关消息定义
type FileCmdID int32

const (
	FileCmdID_CID_FILE_UNKNOWN       FileCmdID = 0
	FileCmdID_CID_FILE_LOGIN_REQ     FileCmdID = 1281
	FileCmdID_CID_FILE_LOGIN_RES     FileCmdID = 1282
	FileCmdID_CID_FILE_STATE         FileCmdID = 1283
	FileCmdID_CID_FILE_PULL_DATA_REQ FileCmdID = 1284
	FileCmdID_CID_FILE_PULL_DATA_RSP FileCmdID = 1285
	// To MsgServer
	FileCmdID_CID_FILE_REQUEST         FileCmdID = 1286
	FileCmdID_CID_FILE_RESPONSE        FileCmdID = 1287
	FileCmdID_CID_FILE_NOTIFY          FileCmdID = 1288
	FileCmdID_CID_FILE_HAS_OFFLINE_REQ FileCmdID = 1289
	FileCmdID_CID_FILE_HAS_OFFLINE_RES FileCmdID = 1290
	FileCmdID_CID_FILE_ADD_OFFLINE_REQ FileCmdID = 1291
	FileCmdID_CID_FILE_DEL_OFFLINE_REQ FileCmdID = 1292
)

var FileCmdID_name = map[int32]string{
	0:    "CID_FILE_UNKNOWN",
	1281: "CID_FILE_LOGIN_REQ",
	1282: "CID_FILE_LOGIN_RES",
	1283: "CID_FILE_STATE",
	1284: "CID_FILE_PULL_DATA_REQ",
	1285: "CID_FILE_PULL_DATA_RSP",
	1286: "CID_FILE_REQUEST",
	1287: "CID_FILE_RESPONSE",
	1288: "CID_FILE_NOTIFY",
	1289: "CID_FILE_HAS_OFFLINE_REQ",
	1290: "CID_FILE_HAS_OFFLINE_RES",
	1291: "CID_FILE_ADD_OFFLINE_REQ",
	1292: "CID_FILE_DEL_OFFLINE_REQ",
}

var FileCmdID_value = map[string]int32{
	"CID_FILE_UNKNOWN":         0,
	"CID_FILE_LOGIN_REQ":       1281,
	"CID_FILE_LOGIN_RES":       1282,
	"CID_FILE_STATE":           1283,
	"CID_FILE_PULL_DATA_REQ":   1284,
	"CID_FILE_PULL_DATA_RSP":   1285,
	"CID_FILE_REQUEST":         1286,
	"CID_FILE_RESPONSE":        1287,
	"CID_FILE_NOTIFY":          1288,
	"CID_FILE_HAS_OFFLINE_REQ": 1289,
	"CID_FILE_HAS_OFFLINE_RES": 1290,
	"CID_FILE_ADD_OFFLINE_REQ": 1291,
	"CID_FILE_DEL_OFFLINE_REQ": 1292,
}

func (x FileCmdID) String() string {
	return proto.EnumName(FileCmdID_name, int32(x))
}

func (FileCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{5}
}

// 透传消息相关
type SwitchServiceCmdID int32

const (
	SwitchServiceCmdID_CID_SWITCH_UNKNOWN SwitchServiceCmdID = 0
	SwitchServiceCmdID_CID_SWITCH_P2P_CMD SwitchServiceCmdID = 1537
)

var SwitchServiceCmdID_name = map[int32]string{
	0:    "CID_SWITCH_UNKNOWN",
	1537: "CID_SWITCH_P2P_CMD",
}

var SwitchServiceCmdID_value = map[string]int32{
	"CID_SWITCH_UNKNOWN": 0,
	"CID_SWITCH_P2P_CMD": 1537,
}

func (x SwitchServiceCmdID) String() string {
	return proto.EnumName(SwitchServiceCmdID_name, int32(x))
}

func (SwitchServiceCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{6}
}

// 杂项消息相关
type OtherCmdID int32

const (
	OtherCmdID_CID_OTHER_UNKNOWN              OtherCmdID = 0
	OtherCmdID_CID_OTHER_HEARTBEAT            OtherCmdID = 1793
	OtherCmdID_CID_OTHER_STOP_RECV_PACKET     OtherCmdID = 1794
	OtherCmdID_CID_OTHER_VALIDATE_REQ         OtherCmdID = 1795
	OtherCmdID_CID_OTHER_VALIDATE_RSP         OtherCmdID = 1796
	OtherCmdID_CID_OTHER_GET_DEVICE_TOKEN_REQ OtherCmdID = 1797
	OtherCmdID_CID_OTHER_GET_DEVICE_TOKEN_RSP OtherCmdID = 1798
	OtherCmdID_CID_OTHER_ROLE_SET             OtherCmdID = 1799
	OtherCmdID_CID_OTHER_ONLINE_USER_INFO     OtherCmdID = 1800
	OtherCmdID_CID_OTHER_MSG_SERV_INFO        OtherCmdID = 1801
	OtherCmdID_CID_OTHER_USER_STATUS_UPDATE   OtherCmdID = 1802
	OtherCmdID_CID_OTHER_USER_CNT_UPDATE      OtherCmdID = 1803
	OtherCmdID_CID_OTHER_SERVER_KICK_USER     OtherCmdID = 1805
	OtherCmdID_CID_OTHER_LOGIN_STATUS_NOTIFY  OtherCmdID = 1806
	OtherCmdID_CID_OTHER_PUSH_TO_USER_REQ     OtherCmdID = 1807
	OtherCmdID_CID_OTHER_PUSH_TO_USER_RSP     OtherCmdID = 1808
	OtherCmdID_CID_OTHER_GET_SHIELD_REQ       OtherCmdID = 1809
	OtherCmdID_CID_OTHER_GET_SHIELD_RSP       OtherCmdID = 1810
	OtherCmdID_CID_OTHER_FILE_TRANSFER_REQ    OtherCmdID = 1841
	OtherCmdID_CID_OTHER_FILE_TRANSFER_RSP    OtherCmdID = 1842
	OtherCmdID_CID_OTHER_FILE_SERVER_IP_REQ   OtherCmdID = 1843
	OtherCmdID_CID_OTHER_FILE_SERVER_IP_RSP   OtherCmdID = 1844
)

var OtherCmdID_name = map[int32]string{
	0:    "CID_OTHER_UNKNOWN",
	1793: "CID_OTHER_HEARTBEAT",
	1794: "CID_OTHER_STOP_RECV_PACKET",
	1795: "CID_OTHER_VALIDATE_REQ",
	1796: "CID_OTHER_VALIDATE_RSP",
	1797: "CID_OTHER_GET_DEVICE_TOKEN_REQ",
	1798: "CID_OTHER_GET_DEVICE_TOKEN_RSP",
	1799: "CID_OTHER_ROLE_SET",
	1800: "CID_OTHER_ONLINE_USER_INFO",
	1801: "CID_OTHER_MSG_SERV_INFO",
	1802: "CID_OTHER_USER_STATUS_UPDATE",
	1803: "CID_OTHER_USER_CNT_UPDATE",
	1805: "CID_OTHER_SERVER_KICK_USER",
	1806: "CID_OTHER_LOGIN_STATUS_NOTIFY",
	1807: "CID_OTHER_PUSH_TO_USER_REQ",
	1808: "CID_OTHER_PUSH_TO_USER_RSP",
	1809: "CID_OTHER_GET_SHIELD_REQ",
	1810: "CID_OTHER_GET_SHIELD_RSP",
	1841: "CID_OTHER_FILE_TRANSFER_REQ",
	1842: "CID_OTHER_FILE_TRANSFER_RSP",
	1843: "CID_OTHER_FILE_SERVER_IP_REQ",
	1844: "CID_OTHER_FILE_SERVER_IP_RSP",
}

var OtherCmdID_value = map[string]int32{
	"CID_OTHER_UNKNOWN":              0,
	"CID_OTHER_HEARTBEAT":            1793,
	"CID_OTHER_STOP_RECV_PACKET":     1794,
	"CID_OTHER_VALIDATE_REQ":         1795,
	"CID_OTHER_VALIDATE_RSP":         1796,
	"CID_OTHER_GET_DEVICE_TOKEN_REQ": 1797,
	"CID_OTHER_GET_DEVICE_TOKEN_RSP": 1798,
	"CID_OTHER_ROLE_SET":             1799,
	"CID_OTHER_ONLINE_USER_INFO":     1800,
	"CID_OTHER_MSG_SERV_INFO":        1801,
	"CID_OTHER_USER_STATUS_UPDATE":   1802,
	"CID_OTHER_USER_CNT_UPDATE":      1803,
	"CID_OTHER_SERVER_KICK_USER":     1805,
	"CID_OTHER_LOGIN_STATUS_NOTIFY":  1806,
	"CID_OTHER_PUSH_TO_USER_REQ":     1807,
	"CID_OTHER_PUSH_TO_USER_RSP":     1808,
	"CID_OTHER_GET_SHIELD_REQ":       1809,
	"CID_OTHER_GET_SHIELD_RSP":       1810,
	"CID_OTHER_FILE_TRANSFER_REQ":    1841,
	"CID_OTHER_FILE_TRANSFER_RSP":    1842,
	"CID_OTHER_FILE_SERVER_IP_REQ":   1843,
	"CID_OTHER_FILE_SERVER_IP_RSP":   1844,
}

func (x OtherCmdID) String() string {
	return proto.EnumName(OtherCmdID_name, int32(x))
}

func (OtherCmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{7}
}

type ResultType int32

const (
	ResultType_REFUSE_REASON_NONE               ResultType = 0
	ResultType_REFUSE_REASON_NO_MSG_SERVER      ResultType = 1
	ResultType_REFUSE_REASON_MSG_SERVER_FULL    ResultType = 2
	ResultType_REFUSE_REASON_NO_DB_SERVER       ResultType = 3
	ResultType_REFUSE_REASON_NO_LOGIN_SERVER    ResultType = 4
	ResultType_REFUSE_REASON_NO_ROUTE_SERVER    ResultType = 5
	ResultType_REFUSE_REASON_DB_VALIDATE_FAILED ResultType = 6
	ResultType_REFUSE_REASON_VERSION_TOO_OLD    ResultType = 7
)

var ResultType_name = map[int32]string{
	0: "REFUSE_REASON_NONE",
	1: "REFUSE_REASON_NO_MSG_SERVER",
	2: "REFUSE_REASON_MSG_SERVER_FULL",
	3: "REFUSE_REASON_NO_DB_SERVER",
	4: "REFUSE_REASON_NO_LOGIN_SERVER",
	5: "REFUSE_REASON_NO_ROUTE_SERVER",
	6: "REFUSE_REASON_DB_VALIDATE_FAILED",
	7: "REFUSE_REASON_VERSION_TOO_OLD",
}

var ResultType_value = map[string]int32{
	"REFUSE_REASON_NONE":               0,
	"REFUSE_REASON_NO_MSG_SERVER":      1,
	"REFUSE_REASON_MSG_SERVER_FULL":    2,
	"REFUSE_REASON_NO_DB_SERVER":       3,
	"REFUSE_REASON_NO_LOGIN_SERVER":    4,
	"REFUSE_REASON_NO_ROUTE_SERVER":    5,
	"REFUSE_REASON_DB_VALIDATE_FAILED": 6,
	"REFUSE_REASON_VERSION_TOO_OLD":    7,
}

func (x ResultType) String() string {
	return proto.EnumName(ResultType_name, int32(x))
}

func (ResultType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{8}
}

type KickReasonType int32

const (
	KickReasonType_KICK_REASON_NONE           KickReasonType = 0
	KickReasonType_KICK_REASON_DUPLICATE_USER KickReasonType = 1
	KickReasonType_KICK_REASON_MOBILE_KICK    KickReasonType = 2
)

var KickReasonType_name = map[int32]string{
	0: "KICK_REASON_NONE",
	1: "KICK_REASON_DUPLICATE_USER",
	2: "KICK_REASON_MOBILE_KICK",
}

var KickReasonType_value = map[string]int32{
	"KICK_REASON_NONE":           0,
	"KICK_REASON_DUPLICATE_USER": 1,
	"KICK_REASON_MOBILE_KICK":    2,
}

func (x KickReasonType) String() string {
	return proto.EnumName(KickReasonType_name, int32(x))
}

func (KickReasonType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{9}
}

type OnlineListType int32

const (
	OnlineListType_ONLINE_LIST_TYPE_NONE        OnlineListType = 0
	OnlineListType_ONLINE_LIST_TYPE_FRIEND_LIST OnlineListType = 1
)

var OnlineListType_name = map[int32]string{
	0: "ONLINE_LIST_TYPE_NONE",
	1: "ONLINE_LIST_TYPE_FRIEND_LIST",
}

var OnlineListType_value = map[string]int32{
	"ONLINE_LIST_TYPE_NONE":        0,
	"ONLINE_LIST_TYPE_FRIEND_LIST": 1,
}

func (x OnlineListType) String() string {
	return proto.EnumName(OnlineListType_name, int32(x))
}

func (OnlineListType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{10}
}

type UserStatType int32

const (
	UserStatType_USER_STATUS_NONE    UserStatType = 0
	UserStatType_USER_STATUS_ONLINE  UserStatType = 1
	UserStatType_USER_STATUS_OFFLINE UserStatType = 2
	UserStatType_USER_STATUS_LEAVE   UserStatType = 3
)

var UserStatType_name = map[int32]string{
	0: "USER_STATUS_NONE",
	1: "USER_STATUS_ONLINE",
	2: "USER_STATUS_OFFLINE",
	3: "USER_STATUS_LEAVE",
}

var UserStatType_value = map[string]int32{
	"USER_STATUS_NONE":    0,
	"USER_STATUS_ONLINE":  1,
	"USER_STATUS_OFFLINE": 2,
	"USER_STATUS_LEAVE":   3,
}

func (x UserStatType) String() string {
	return proto.EnumName(UserStatType_name, int32(x))
}

func (UserStatType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{11}
}

type SessionType int32

const (
	SessionType_SESSION_TYPE_NONE   SessionType = 0
	SessionType_SESSION_TYPE_SINGLE SessionType = 1
	SessionType_SESSION_TYPE_GROUP  SessionType = 2
)

var SessionType_name = map[int32]string{
	0: "SESSION_TYPE_NONE",
	1: "SESSION_TYPE_SINGLE",
	2: "SESSION_TYPE_GROUP",
}

var SessionType_value = map[string]int32{
	"SESSION_TYPE_NONE":   0,
	"SESSION_TYPE_SINGLE": 1,
	"SESSION_TYPE_GROUP":  2,
}

func (x SessionType) String() string {
	return proto.EnumName(SessionType_name, int32(x))
}

func (SessionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{12}
}

type MsgType int32

const (
	MsgType_MSG_TYPE_NONE         MsgType = 0
	MsgType_MSG_TYPE_SINGLE_TEXT  MsgType = 1
	MsgType_MSG_TYPE_SINGLE_AUDIO MsgType = 2
	MsgType_MSG_TYPE_GROUP_TEXT   MsgType = 17
	MsgType_MSG_TYPE_GROUP_AUDIO  MsgType = 18
)

var MsgType_name = map[int32]string{
	0:  "MSG_TYPE_NONE",
	1:  "MSG_TYPE_SINGLE_TEXT",
	2:  "MSG_TYPE_SINGLE_AUDIO",
	17: "MSG_TYPE_GROUP_TEXT",
	18: "MSG_TYPE_GROUP_AUDIO",
}

var MsgType_value = map[string]int32{
	"MSG_TYPE_NONE":         0,
	"MSG_TYPE_SINGLE_TEXT":  1,
	"MSG_TYPE_SINGLE_AUDIO": 2,
	"MSG_TYPE_GROUP_TEXT":   17,
	"MSG_TYPE_GROUP_AUDIO":  18,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}

func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{13}
}

type ClientType int32

const (
	ClientType_CLIENT_TYPE_NONE    ClientType = 0
	ClientType_CLIENT_TYPE_WINDOWS ClientType = 1
	ClientType_CLIENT_TYPE_MAC     ClientType = 2
	ClientType_CLIENT_TYPE_IOS     ClientType = 17
	ClientType_CLIENT_TYPE_ANDROID ClientType = 18
)

var ClientType_name = map[int32]string{
	0:  "CLIENT_TYPE_NONE",
	1:  "CLIENT_TYPE_WINDOWS",
	2:  "CLIENT_TYPE_MAC",
	17: "CLIENT_TYPE_IOS",
	18: "CLIENT_TYPE_ANDROID",
}

var ClientType_value = map[string]int32{
	"CLIENT_TYPE_NONE":    0,
	"CLIENT_TYPE_WINDOWS": 1,
	"CLIENT_TYPE_MAC":     2,
	"CLIENT_TYPE_IOS":     17,
	"CLIENT_TYPE_ANDROID": 18,
}

func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}

func (ClientType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{14}
}

type GroupType int32

const (
	GroupType_GROUP_TYPE_NONE   GroupType = 0
	GroupType_GROUP_TYPE_NORMAL GroupType = 1
	GroupType_GROUP_TYPE_TMP    GroupType = 2
)

var GroupType_name = map[int32]string{
	0: "GROUP_TYPE_NONE",
	1: "GROUP_TYPE_NORMAL",
	2: "GROUP_TYPE_TMP",
}

var GroupType_value = map[string]int32{
	"GROUP_TYPE_NONE":   0,
	"GROUP_TYPE_NORMAL": 1,
	"GROUP_TYPE_TMP":    2,
}

func (x GroupType) String() string {
	return proto.EnumName(GroupType_name, int32(x))
}

func (GroupType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{15}
}

type GroupModifyType int32

const (
	GroupModifyType_GROUP_MODIFY_TYPE_NONE GroupModifyType = 0
	GroupModifyType_GROUP_MODIFY_TYPE_ADD  GroupModifyType = 1
	GroupModifyType_GROUP_MODIFY_TYPE_DEL  GroupModifyType = 2
)

var GroupModifyType_name = map[int32]string{
	0: "GROUP_MODIFY_TYPE_NONE",
	1: "GROUP_MODIFY_TYPE_ADD",
	2: "GROUP_MODIFY_TYPE_DEL",
}

var GroupModifyType_value = map[string]int32{
	"GROUP_MODIFY_TYPE_NONE": 0,
	"GROUP_MODIFY_TYPE_ADD":  1,
	"GROUP_MODIFY_TYPE_DEL":  2,
}

func (x GroupModifyType) String() string {
	return proto.EnumName(GroupModifyType_name, int32(x))
}

func (GroupModifyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{16}
}

type TransferFileType int32

const (
	TransferFileType_FILE_TYPE_NONE    TransferFileType = 0
	TransferFileType_FILE_TYPE_ONLINE  TransferFileType = 1
	TransferFileType_FILE_TYPE_OFFLINE TransferFileType = 2
)

var TransferFileType_name = map[int32]string{
	0: "FILE_TYPE_NONE",
	1: "FILE_TYPE_ONLINE",
	2: "FILE_TYPE_OFFLINE",
}

var TransferFileType_value = map[string]int32{
	"FILE_TYPE_NONE":    0,
	"FILE_TYPE_ONLINE":  1,
	"FILE_TYPE_OFFLINE": 2,
}

func (x TransferFileType) String() string {
	return proto.EnumName(TransferFileType_name, int32(x))
}

func (TransferFileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{17}
}

type ClientFileState int32

const (
	ClientFileState_CLIENT_FILE_PEER_READY ClientFileState = 0
	ClientFileState_CLIENT_FILE_CANCEL     ClientFileState = 1
	ClientFileState_CLIENT_FILE_REFUSE     ClientFileState = 2
	ClientFileState_CLIENT_FILE_DONE       ClientFileState = 3
)

var ClientFileState_name = map[int32]string{
	0: "CLIENT_FILE_PEER_READY",
	1: "CLIENT_FILE_CANCEL",
	2: "CLIENT_FILE_REFUSE",
	3: "CLIENT_FILE_DONE",
}

var ClientFileState_value = map[string]int32{
	"CLIENT_FILE_PEER_READY": 0,
	"CLIENT_FILE_CANCEL":     1,
	"CLIENT_FILE_REFUSE":     2,
	"CLIENT_FILE_DONE":       3,
}

func (x ClientFileState) String() string {
	return proto.EnumName(ClientFileState_name, int32(x))
}

func (ClientFileState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{18}
}

type ClientFileRole int32

const (
	ClientFileRole_CLIENT_FILE_NONE        ClientFileRole = 0
	ClientFileRole_CLIENT_REALTIME_SENDER  ClientFileRole = 1
	ClientFileRole_CLIENT_REALTIME_RECVER  ClientFileRole = 2
	ClientFileRole_CLIENT_OFFLINE_UPLOAD   ClientFileRole = 3
	ClientFileRole_CLIENT_OFFLINE_DOWNLOAD ClientFileRole = 4
)

var ClientFileRole_name = map[int32]string{
	0: "CLIENT_FILE_NONE",
	1: "CLIENT_REALTIME_SENDER",
	2: "CLIENT_REALTIME_RECVER",
	3: "CLIENT_OFFLINE_UPLOAD",
	4: "CLIENT_OFFLINE_DOWNLOAD",
}

var ClientFileRole_value = map[string]int32{
	"CLIENT_FILE_NONE":        0,
	"CLIENT_REALTIME_SENDER":  1,
	"CLIENT_REALTIME_RECVER":  2,
	"CLIENT_OFFLINE_UPLOAD":   3,
	"CLIENT_OFFLINE_DOWNLOAD": 4,
}

func (x ClientFileRole) String() string {
	return proto.EnumName(ClientFileRole_name, int32(x))
}

func (ClientFileRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{19}
}

type FileServerError int32

const (
	FileServerError_FILE_SERVER_ERRNO_OK                               FileServerError = 0
	FileServerError_FILE_SERVER_ERRNO_CREATE_TASK_ID_ERROR             FileServerError = 1
	FileServerError_FILE_SERVER_ERRNO_CREATE_TASK_ERROR                FileServerError = 2
	FileServerError_FILE_SERVER_ERRNO_LOGIN_INVALID_TOKEN              FileServerError = 3
	FileServerError_FILE_SERVER_ERRNO_INVALID_USER_FOR_TASK            FileServerError = 4
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_WITH_INVALID_TASK_ID   FileServerError = 5
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_ILLIEAGE_USER          FileServerError = 6
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR            FileServerError = 7
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_OPEN_FILE_ERROR        FileServerError = 8
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_READ_FILE_HEADER_ERROR FileServerError = 9
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR        FileServerError = 10
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_ERROR      FileServerError = 11
	FileServerError_FILE_SERVER_ERRNO_PULL_DATA_FINISHED               FileServerError = 12
)

var FileServerError_name = map[int32]string{
	0:  "FILE_SERVER_ERRNO_OK",
	1:  "FILE_SERVER_ERRNO_CREATE_TASK_ID_ERROR",
	2:  "FILE_SERVER_ERRNO_CREATE_TASK_ERROR",
	3:  "FILE_SERVER_ERRNO_LOGIN_INVALID_TOKEN",
	4:  "FILE_SERVER_ERRNO_INVALID_USER_FOR_TASK",
	5:  "FILE_SERVER_ERRNO_PULL_DATA_WITH_INVALID_TASK_ID",
	6:  "FILE_SERVER_ERRNO_PULL_DATA_ILLIEAGE_USER",
	7:  "FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR",
	8:  "FILE_SERVER_ERRNO_PULL_DATA_OPEN_FILE_ERROR",
	9:  "FILE_SERVER_ERRNO_PULL_DATA_READ_FILE_HEADER_ERROR",
	10: "FILE_SERVER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR",
	11: "FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_ERROR",
	12: "FILE_SERVER_ERRNO_PULL_DATA_FINISHED",
}

var FileServerError_value = map[string]int32{
	"FILE_SERVER_ERRNO_OK":                               0,
	"FILE_SERVER_ERRNO_CREATE_TASK_ID_ERROR":             1,
	"FILE_SERVER_ERRNO_CREATE_TASK_ERROR":                2,
	"FILE_SERVER_ERRNO_LOGIN_INVALID_TOKEN":              3,
	"FILE_SERVER_ERRNO_INVALID_USER_FOR_TASK":            4,
	"FILE_SERVER_ERRNO_PULL_DATA_WITH_INVALID_TASK_ID":   5,
	"FILE_SERVER_ERRNO_PULL_DATA_ILLIEAGE_USER":          6,
	"FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR":            7,
	"FILE_SERVER_ERRNO_PULL_DATA_OPEN_FILE_ERROR":        8,
	"FILE_SERVER_ERRNO_PULL_DATA_READ_FILE_HEADER_ERROR": 9,
	"FILE_SERVER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR":        10,
	"FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_ERROR":      11,
	"FILE_SERVER_ERRNO_PULL_DATA_FINISHED":               12,
}

func (x FileServerError) String() string {
	return proto.EnumName(FileServerError_name, int32(x))
}

func (FileServerError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{20}
}

type SessionStatusType int32

const (
	SessionStatusType_SESSION_STATUS_OK     SessionStatusType = 0
	SessionStatusType_SESSION_STATUS_DELETE SessionStatusType = 1
)

var SessionStatusType_name = map[int32]string{
	0: "SESSION_STATUS_OK",
	1: "SESSION_STATUS_DELETE",
}

var SessionStatusType_value = map[string]int32{
	"SESSION_STATUS_OK":     0,
	"SESSION_STATUS_DELETE": 1,
}

func (x SessionStatusType) String() string {
	return proto.EnumName(SessionStatusType_name, int32(x))
}

func (SessionStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{21}
}

type DepartmentStatusType int32

const (
	DepartmentStatusType_DEPT_STATUS_OK     DepartmentStatusType = 0
	DepartmentStatusType_DEPT_STATUS_DELETE DepartmentStatusType = 1
)

var DepartmentStatusType_name = map[int32]string{
	0: "DEPT_STATUS_OK",
	1: "DEPT_STATUS_DELETE",
}

var DepartmentStatusType_value = map[string]int32{
	"DEPT_STATUS_OK":     0,
	"DEPT_STATUS_DELETE": 1,
}

func (x DepartmentStatusType) String() string {
	return proto.EnumName(DepartmentStatusType_name, int32(x))
}

func (DepartmentStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{22}
}

type IpAddr struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpAddr) Reset()         { *m = IpAddr{} }
func (m *IpAddr) String() string { return proto.CompactTextString(m) }
func (*IpAddr) ProtoMessage()    {}
func (*IpAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{0}
}

func (m *IpAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddr.Unmarshal(m, b)
}
func (m *IpAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddr.Marshal(b, m, deterministic)
}
func (m *IpAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddr.Merge(m, src)
}
func (m *IpAddr) XXX_Size() int {
	return xxx_messageInfo_IpAddr.Size(m)
}
func (m *IpAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddr.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddr proto.InternalMessageInfo

func (m *IpAddr) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IpAddr) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type UserInfo struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserGender           uint32   `protobuf:"varint,2,opt,name=user_gender,json=userGender,proto3" json:"user_gender,omitempty"`
	UserNickName         string   `protobuf:"bytes,3,opt,name=user_nick_name,json=userNickName,proto3" json:"user_nick_name,omitempty"`
	AvatarUrl            string   `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	DepartmentId         uint32   `protobuf:"varint,5,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	UserRealName         string   `protobuf:"bytes,7,opt,name=user_real_name,json=userRealName,proto3" json:"user_real_name,omitempty"`
	UserTel              string   `protobuf:"bytes,8,opt,name=user_tel,json=userTel,proto3" json:"user_tel,omitempty"`
	UserDomain           string   `protobuf:"bytes,9,opt,name=user_domain,json=userDomain,proto3" json:"user_domain,omitempty"`
	Status               uint32   `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	SignInfo             string   `protobuf:"bytes,11,opt,name=sign_info,json=signInfo,proto3" json:"sign_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserInfo) GetUserGender() uint32 {
	if m != nil {
		return m.UserGender
	}
	return 0
}

func (m *UserInfo) GetUserNickName() string {
	if m != nil {
		return m.UserNickName
	}
	return ""
}

func (m *UserInfo) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *UserInfo) GetDepartmentId() uint32 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetUserRealName() string {
	if m != nil {
		return m.UserRealName
	}
	return ""
}

func (m *UserInfo) GetUserTel() string {
	if m != nil {
		return m.UserTel
	}
	return ""
}

func (m *UserInfo) GetUserDomain() string {
	if m != nil {
		return m.UserDomain
	}
	return ""
}

func (m *UserInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserInfo) GetSignInfo() string {
	if m != nil {
		return m.SignInfo
	}
	return ""
}

type ContactSessionInfo struct {
	SessionId            uint32            `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SessionType          SessionType       `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=im_protocol.SessionType" json:"session_type,omitempty"`
	SessionStatus        SessionStatusType `protobuf:"varint,3,opt,name=session_status,json=sessionStatus,proto3,enum=im_protocol.SessionStatusType" json:"session_status,omitempty"`
	UpdatedTime          uint32            `protobuf:"varint,4,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	LatestMsgId          uint32            `protobuf:"varint,5,opt,name=latest_msg_id,json=latestMsgId,proto3" json:"latest_msg_id,omitempty"`
	LatestMsgData        []byte            `protobuf:"bytes,6,opt,name=latest_msg_data,json=latestMsgData,proto3" json:"latest_msg_data,omitempty"`
	LatestMsgType        MsgType           `protobuf:"varint,7,opt,name=latest_msg_type,json=latestMsgType,proto3,enum=im_protocol.MsgType" json:"latest_msg_type,omitempty"`
	LatestMsgFromUserId  uint32            `protobuf:"varint,8,opt,name=latest_msg_from_user_id,json=latestMsgFromUserId,proto3" json:"latest_msg_from_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContactSessionInfo) Reset()         { *m = ContactSessionInfo{} }
func (m *ContactSessionInfo) String() string { return proto.CompactTextString(m) }
func (*ContactSessionInfo) ProtoMessage()    {}
func (*ContactSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{2}
}

func (m *ContactSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactSessionInfo.Unmarshal(m, b)
}
func (m *ContactSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactSessionInfo.Marshal(b, m, deterministic)
}
func (m *ContactSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactSessionInfo.Merge(m, src)
}
func (m *ContactSessionInfo) XXX_Size() int {
	return xxx_messageInfo_ContactSessionInfo.Size(m)
}
func (m *ContactSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContactSessionInfo proto.InternalMessageInfo

func (m *ContactSessionInfo) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *ContactSessionInfo) GetSessionType() SessionType {
	if m != nil {
		return m.SessionType
	}
	return SessionType_SESSION_TYPE_NONE
}

func (m *ContactSessionInfo) GetSessionStatus() SessionStatusType {
	if m != nil {
		return m.SessionStatus
	}
	return SessionStatusType_SESSION_STATUS_OK
}

func (m *ContactSessionInfo) GetUpdatedTime() uint32 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *ContactSessionInfo) GetLatestMsgId() uint32 {
	if m != nil {
		return m.LatestMsgId
	}
	return 0
}

func (m *ContactSessionInfo) GetLatestMsgData() []byte {
	if m != nil {
		return m.LatestMsgData
	}
	return nil
}

func (m *ContactSessionInfo) GetLatestMsgType() MsgType {
	if m != nil {
		return m.LatestMsgType
	}
	return MsgType_MSG_TYPE_NONE
}

func (m *ContactSessionInfo) GetLatestMsgFromUserId() uint32 {
	if m != nil {
		return m.LatestMsgFromUserId
	}
	return 0
}

type UserStat struct {
	UserId               uint32       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status               UserStatType `protobuf:"varint,2,opt,name=status,proto3,enum=im_protocol.UserStatType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserStat) Reset()         { *m = UserStat{} }
func (m *UserStat) String() string { return proto.CompactTextString(m) }
func (*UserStat) ProtoMessage()    {}
func (*UserStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{3}
}

func (m *UserStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserStat.Unmarshal(m, b)
}
func (m *UserStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserStat.Marshal(b, m, deterministic)
}
func (m *UserStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserStat.Merge(m, src)
}
func (m *UserStat) XXX_Size() int {
	return xxx_messageInfo_UserStat.Size(m)
}
func (m *UserStat) XXX_DiscardUnknown() {
	xxx_messageInfo_UserStat.DiscardUnknown(m)
}

var xxx_messageInfo_UserStat proto.InternalMessageInfo

func (m *UserStat) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserStat) GetStatus() UserStatType {
	if m != nil {
		return m.Status
	}
	return UserStatType_USER_STATUS_NONE
}

type ServerUserStat struct {
	UserId               uint32       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status               UserStatType `protobuf:"varint,2,opt,name=status,proto3,enum=im_protocol.UserStatType" json:"status,omitempty"`
	ClientType           ClientType   `protobuf:"varint,3,opt,name=client_type,json=clientType,proto3,enum=im_protocol.ClientType" json:"client_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ServerUserStat) Reset()         { *m = ServerUserStat{} }
func (m *ServerUserStat) String() string { return proto.CompactTextString(m) }
func (*ServerUserStat) ProtoMessage()    {}
func (*ServerUserStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{4}
}

func (m *ServerUserStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerUserStat.Unmarshal(m, b)
}
func (m *ServerUserStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerUserStat.Marshal(b, m, deterministic)
}
func (m *ServerUserStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerUserStat.Merge(m, src)
}
func (m *ServerUserStat) XXX_Size() int {
	return xxx_messageInfo_ServerUserStat.Size(m)
}
func (m *ServerUserStat) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerUserStat.DiscardUnknown(m)
}

var xxx_messageInfo_ServerUserStat proto.InternalMessageInfo

func (m *ServerUserStat) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ServerUserStat) GetStatus() UserStatType {
	if m != nil {
		return m.Status
	}
	return UserStatType_USER_STATUS_NONE
}

func (m *ServerUserStat) GetClientType() ClientType {
	if m != nil {
		return m.ClientType
	}
	return ClientType_CLIENT_TYPE_NONE
}

type UnreadInfo struct {
	SessionId            uint32      `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SessionType          SessionType `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=im_protocol.SessionType" json:"session_type,omitempty"`
	UnreadCnt            uint32      `protobuf:"varint,3,opt,name=unread_cnt,json=unreadCnt,proto3" json:"unread_cnt,omitempty"`
	LatestMsgId          uint32      `protobuf:"varint,4,opt,name=latest_msg_id,json=latestMsgId,proto3" json:"latest_msg_id,omitempty"`
	LatestMsgData        []byte      `protobuf:"bytes,5,opt,name=latest_msg_data,json=latestMsgData,proto3" json:"latest_msg_data,omitempty"`
	LatestMsgType        MsgType     `protobuf:"varint,6,opt,name=latest_msg_type,json=latestMsgType,proto3,enum=im_protocol.MsgType" json:"latest_msg_type,omitempty"`
	LatestMsgFromUserId  uint32      `protobuf:"varint,7,opt,name=latest_msg_from_user_id,json=latestMsgFromUserId,proto3" json:"latest_msg_from_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UnreadInfo) Reset()         { *m = UnreadInfo{} }
func (m *UnreadInfo) String() string { return proto.CompactTextString(m) }
func (*UnreadInfo) ProtoMessage()    {}
func (*UnreadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{5}
}

func (m *UnreadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnreadInfo.Unmarshal(m, b)
}
func (m *UnreadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnreadInfo.Marshal(b, m, deterministic)
}
func (m *UnreadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnreadInfo.Merge(m, src)
}
func (m *UnreadInfo) XXX_Size() int {
	return xxx_messageInfo_UnreadInfo.Size(m)
}
func (m *UnreadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UnreadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UnreadInfo proto.InternalMessageInfo

func (m *UnreadInfo) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *UnreadInfo) GetSessionType() SessionType {
	if m != nil {
		return m.SessionType
	}
	return SessionType_SESSION_TYPE_NONE
}

func (m *UnreadInfo) GetUnreadCnt() uint32 {
	if m != nil {
		return m.UnreadCnt
	}
	return 0
}

func (m *UnreadInfo) GetLatestMsgId() uint32 {
	if m != nil {
		return m.LatestMsgId
	}
	return 0
}

func (m *UnreadInfo) GetLatestMsgData() []byte {
	if m != nil {
		return m.LatestMsgData
	}
	return nil
}

func (m *UnreadInfo) GetLatestMsgType() MsgType {
	if m != nil {
		return m.LatestMsgType
	}
	return MsgType_MSG_TYPE_NONE
}

func (m *UnreadInfo) GetLatestMsgFromUserId() uint32 {
	if m != nil {
		return m.LatestMsgFromUserId
	}
	return 0
}

type MsgInfo struct {
	MsgId                uint32   `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	FromSessionId        uint32   `protobuf:"varint,2,opt,name=from_session_id,json=fromSessionId,proto3" json:"from_session_id,omitempty"`
	CreateTime           uint32   `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	MsgType              MsgType  `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3,enum=im_protocol.MsgType" json:"msg_type,omitempty"`
	MsgData              []byte   `protobuf:"bytes,5,opt,name=msg_data,json=msgData,proto3" json:"msg_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgInfo) Reset()         { *m = MsgInfo{} }
func (m *MsgInfo) String() string { return proto.CompactTextString(m) }
func (*MsgInfo) ProtoMessage()    {}
func (*MsgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{6}
}

func (m *MsgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgInfo.Unmarshal(m, b)
}
func (m *MsgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgInfo.Marshal(b, m, deterministic)
}
func (m *MsgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInfo.Merge(m, src)
}
func (m *MsgInfo) XXX_Size() int {
	return xxx_messageInfo_MsgInfo.Size(m)
}
func (m *MsgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInfo proto.InternalMessageInfo

func (m *MsgInfo) GetMsgId() uint32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *MsgInfo) GetFromSessionId() uint32 {
	if m != nil {
		return m.FromSessionId
	}
	return 0
}

func (m *MsgInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MsgInfo) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_MSG_TYPE_NONE
}

func (m *MsgInfo) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type GroupVersionInfo struct {
	GroupId              uint32   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Version              uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupVersionInfo) Reset()         { *m = GroupVersionInfo{} }
func (m *GroupVersionInfo) String() string { return proto.CompactTextString(m) }
func (*GroupVersionInfo) ProtoMessage()    {}
func (*GroupVersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{7}
}

func (m *GroupVersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupVersionInfo.Unmarshal(m, b)
}
func (m *GroupVersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupVersionInfo.Marshal(b, m, deterministic)
}
func (m *GroupVersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupVersionInfo.Merge(m, src)
}
func (m *GroupVersionInfo) XXX_Size() int {
	return xxx_messageInfo_GroupVersionInfo.Size(m)
}
func (m *GroupVersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupVersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupVersionInfo proto.InternalMessageInfo

func (m *GroupVersionInfo) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *GroupVersionInfo) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GroupInfo struct {
	GroupId              uint32    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Version              uint32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	GroupName            string    `protobuf:"bytes,3,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupAvatar          string    `protobuf:"bytes,4,opt,name=group_avatar,json=groupAvatar,proto3" json:"group_avatar,omitempty"`
	GroupCreatorId       uint32    `protobuf:"varint,5,opt,name=group_creator_id,json=groupCreatorId,proto3" json:"group_creator_id,omitempty"`
	GroupType            GroupType `protobuf:"varint,6,opt,name=group_type,json=groupType,proto3,enum=im_protocol.GroupType" json:"group_type,omitempty"`
	ShieldStatus         uint32    `protobuf:"varint,7,opt,name=shield_status,json=shieldStatus,proto3" json:"shield_status,omitempty"`
	GroupMemberList      []uint32  `protobuf:"varint,8,rep,packed,name=group_member_list,json=groupMemberList,proto3" json:"group_member_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{8}
}

func (m *GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInfo.Unmarshal(m, b)
}
func (m *GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInfo.Merge(m, src)
}
func (m *GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupInfo.Size(m)
}
func (m *GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInfo proto.InternalMessageInfo

func (m *GroupInfo) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *GroupInfo) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GroupInfo) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GroupInfo) GetGroupAvatar() string {
	if m != nil {
		return m.GroupAvatar
	}
	return ""
}

func (m *GroupInfo) GetGroupCreatorId() uint32 {
	if m != nil {
		return m.GroupCreatorId
	}
	return 0
}

func (m *GroupInfo) GetGroupType() GroupType {
	if m != nil {
		return m.GroupType
	}
	return GroupType_GROUP_TYPE_NONE
}

func (m *GroupInfo) GetShieldStatus() uint32 {
	if m != nil {
		return m.ShieldStatus
	}
	return 0
}

func (m *GroupInfo) GetGroupMemberList() []uint32 {
	if m != nil {
		return m.GroupMemberList
	}
	return nil
}

type UserTokenInfo struct {
	UserId               uint32     `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserType             ClientType `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=im_protocol.ClientType" json:"user_type,omitempty"`
	Token                string     `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	PushCount            uint32     `protobuf:"varint,4,opt,name=push_count,json=pushCount,proto3" json:"push_count,omitempty"`
	PushType             uint32     `protobuf:"varint,5,opt,name=push_type,json=pushType,proto3" json:"push_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserTokenInfo) Reset()         { *m = UserTokenInfo{} }
func (m *UserTokenInfo) String() string { return proto.CompactTextString(m) }
func (*UserTokenInfo) ProtoMessage()    {}
func (*UserTokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{9}
}

func (m *UserTokenInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserTokenInfo.Unmarshal(m, b)
}
func (m *UserTokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserTokenInfo.Marshal(b, m, deterministic)
}
func (m *UserTokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTokenInfo.Merge(m, src)
}
func (m *UserTokenInfo) XXX_Size() int {
	return xxx_messageInfo_UserTokenInfo.Size(m)
}
func (m *UserTokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserTokenInfo proto.InternalMessageInfo

func (m *UserTokenInfo) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserTokenInfo) GetUserType() ClientType {
	if m != nil {
		return m.UserType
	}
	return ClientType_CLIENT_TYPE_NONE
}

func (m *UserTokenInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserTokenInfo) GetPushCount() uint32 {
	if m != nil {
		return m.PushCount
	}
	return 0
}

func (m *UserTokenInfo) GetPushType() uint32 {
	if m != nil {
		return m.PushType
	}
	return 0
}

type PushResult struct {
	UserToken            string   `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	ResultCode           uint32   `protobuf:"varint,2,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushResult) Reset()         { *m = PushResult{} }
func (m *PushResult) String() string { return proto.CompactTextString(m) }
func (*PushResult) ProtoMessage()    {}
func (*PushResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{10}
}

func (m *PushResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushResult.Unmarshal(m, b)
}
func (m *PushResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushResult.Marshal(b, m, deterministic)
}
func (m *PushResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushResult.Merge(m, src)
}
func (m *PushResult) XXX_Size() int {
	return xxx_messageInfo_PushResult.Size(m)
}
func (m *PushResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PushResult.DiscardUnknown(m)
}

var xxx_messageInfo_PushResult proto.InternalMessageInfo

func (m *PushResult) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *PushResult) GetResultCode() uint32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

type ShieldStatus struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId              uint32   `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ShieldStatus         uint32   `protobuf:"varint,3,opt,name=shield_status,json=shieldStatus,proto3" json:"shield_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShieldStatus) Reset()         { *m = ShieldStatus{} }
func (m *ShieldStatus) String() string { return proto.CompactTextString(m) }
func (*ShieldStatus) ProtoMessage()    {}
func (*ShieldStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{11}
}

func (m *ShieldStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShieldStatus.Unmarshal(m, b)
}
func (m *ShieldStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShieldStatus.Marshal(b, m, deterministic)
}
func (m *ShieldStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShieldStatus.Merge(m, src)
}
func (m *ShieldStatus) XXX_Size() int {
	return xxx_messageInfo_ShieldStatus.Size(m)
}
func (m *ShieldStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ShieldStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ShieldStatus proto.InternalMessageInfo

func (m *ShieldStatus) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ShieldStatus) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ShieldStatus) GetShieldStatus() uint32 {
	if m != nil {
		return m.ShieldStatus
	}
	return 0
}

type OfflineFileInfo struct {
	FromUserId           uint32   `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FileName             string   `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize             uint32   `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineFileInfo) Reset()         { *m = OfflineFileInfo{} }
func (m *OfflineFileInfo) String() string { return proto.CompactTextString(m) }
func (*OfflineFileInfo) ProtoMessage()    {}
func (*OfflineFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{12}
}

func (m *OfflineFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineFileInfo.Unmarshal(m, b)
}
func (m *OfflineFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineFileInfo.Marshal(b, m, deterministic)
}
func (m *OfflineFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineFileInfo.Merge(m, src)
}
func (m *OfflineFileInfo) XXX_Size() int {
	return xxx_messageInfo_OfflineFileInfo.Size(m)
}
func (m *OfflineFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineFileInfo proto.InternalMessageInfo

func (m *OfflineFileInfo) GetFromUserId() uint32 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *OfflineFileInfo) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *OfflineFileInfo) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *OfflineFileInfo) GetFileSize() uint32 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

type DepartInfo struct {
	DeptId               uint32               `protobuf:"varint,1,opt,name=dept_id,json=deptId,proto3" json:"dept_id,omitempty"`
	Priority             uint32               `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	DeptName             string               `protobuf:"bytes,3,opt,name=dept_name,json=deptName,proto3" json:"dept_name,omitempty"`
	ParentDeptId         uint32               `protobuf:"varint,4,opt,name=parent_dept_id,json=parentDeptId,proto3" json:"parent_dept_id,omitempty"`
	DeptStatus           DepartmentStatusType `protobuf:"varint,5,opt,name=dept_status,json=deptStatus,proto3,enum=im_protocol.DepartmentStatusType" json:"dept_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DepartInfo) Reset()         { *m = DepartInfo{} }
func (m *DepartInfo) String() string { return proto.CompactTextString(m) }
func (*DepartInfo) ProtoMessage()    {}
func (*DepartInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{13}
}

func (m *DepartInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepartInfo.Unmarshal(m, b)
}
func (m *DepartInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepartInfo.Marshal(b, m, deterministic)
}
func (m *DepartInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepartInfo.Merge(m, src)
}
func (m *DepartInfo) XXX_Size() int {
	return xxx_messageInfo_DepartInfo.Size(m)
}
func (m *DepartInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DepartInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DepartInfo proto.InternalMessageInfo

func (m *DepartInfo) GetDeptId() uint32 {
	if m != nil {
		return m.DeptId
	}
	return 0
}

func (m *DepartInfo) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *DepartInfo) GetDeptName() string {
	if m != nil {
		return m.DeptName
	}
	return ""
}

func (m *DepartInfo) GetParentDeptId() uint32 {
	if m != nil {
		return m.ParentDeptId
	}
	return 0
}

func (m *DepartInfo) GetDeptStatus() DepartmentStatusType {
	if m != nil {
		return m.DeptStatus
	}
	return DepartmentStatusType_DEPT_STATUS_OK
}

type PushShieldStatus struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ShieldStatus         uint32   `protobuf:"varint,2,opt,name=shield_status,json=shieldStatus,proto3" json:"shield_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushShieldStatus) Reset()         { *m = PushShieldStatus{} }
func (m *PushShieldStatus) String() string { return proto.CompactTextString(m) }
func (*PushShieldStatus) ProtoMessage()    {}
func (*PushShieldStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07aeb8a03a36862, []int{14}
}

func (m *PushShieldStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushShieldStatus.Unmarshal(m, b)
}
func (m *PushShieldStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushShieldStatus.Marshal(b, m, deterministic)
}
func (m *PushShieldStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushShieldStatus.Merge(m, src)
}
func (m *PushShieldStatus) XXX_Size() int {
	return xxx_messageInfo_PushShieldStatus.Size(m)
}
func (m *PushShieldStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PushShieldStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PushShieldStatus proto.InternalMessageInfo

func (m *PushShieldStatus) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PushShieldStatus) GetShieldStatus() uint32 {
	if m != nil {
		return m.ShieldStatus
	}
	return 0
}

func init() {
	proto.RegisterEnum("im_protocol.ServiceID", ServiceID_name, ServiceID_value)
	proto.RegisterEnum("im_protocol.LoginCmdID", LoginCmdID_name, LoginCmdID_value)
	proto.RegisterEnum("im_protocol.BuddyListCmdID", BuddyListCmdID_name, BuddyListCmdID_value)
	proto.RegisterEnum("im_protocol.MessageCmdID", MessageCmdID_name, MessageCmdID_value)
	proto.RegisterEnum("im_protocol.GroupCmdID", GroupCmdID_name, GroupCmdID_value)
	proto.RegisterEnum("im_protocol.FileCmdID", FileCmdID_name, FileCmdID_value)
	proto.RegisterEnum("im_protocol.SwitchServiceCmdID", SwitchServiceCmdID_name, SwitchServiceCmdID_value)
	proto.RegisterEnum("im_protocol.OtherCmdID", OtherCmdID_name, OtherCmdID_value)
	proto.RegisterEnum("im_protocol.ResultType", ResultType_name, ResultType_value)
	proto.RegisterEnum("im_protocol.KickReasonType", KickReasonType_name, KickReasonType_value)
	proto.RegisterEnum("im_protocol.OnlineListType", OnlineListType_name, OnlineListType_value)
	proto.RegisterEnum("im_protocol.UserStatType", UserStatType_name, UserStatType_value)
	proto.RegisterEnum("im_protocol.SessionType", SessionType_name, SessionType_value)
	proto.RegisterEnum("im_protocol.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("im_protocol.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("im_protocol.GroupType", GroupType_name, GroupType_value)
	proto.RegisterEnum("im_protocol.GroupModifyType", GroupModifyType_name, GroupModifyType_value)
	proto.RegisterEnum("im_protocol.TransferFileType", TransferFileType_name, TransferFileType_value)
	proto.RegisterEnum("im_protocol.ClientFileState", ClientFileState_name, ClientFileState_value)
	proto.RegisterEnum("im_protocol.ClientFileRole", ClientFileRole_name, ClientFileRole_value)
	proto.RegisterEnum("im_protocol.FileServerError", FileServerError_name, FileServerError_value)
	proto.RegisterEnum("im_protocol.SessionStatusType", SessionStatusType_name, SessionStatusType_value)
	proto.RegisterEnum("im_protocol.DepartmentStatusType", DepartmentStatusType_name, DepartmentStatusType_value)
	proto.RegisterType((*IpAddr)(nil), "im_protocol.IpAddr")
	proto.RegisterType((*UserInfo)(nil), "im_protocol.UserInfo")
	proto.RegisterType((*ContactSessionInfo)(nil), "im_protocol.ContactSessionInfo")
	proto.RegisterType((*UserStat)(nil), "im_protocol.UserStat")
	proto.RegisterType((*ServerUserStat)(nil), "im_protocol.ServerUserStat")
	proto.RegisterType((*UnreadInfo)(nil), "im_protocol.UnreadInfo")
	proto.RegisterType((*MsgInfo)(nil), "im_protocol.MsgInfo")
	proto.RegisterType((*GroupVersionInfo)(nil), "im_protocol.GroupVersionInfo")
	proto.RegisterType((*GroupInfo)(nil), "im_protocol.GroupInfo")
	proto.RegisterType((*UserTokenInfo)(nil), "im_protocol.UserTokenInfo")
	proto.RegisterType((*PushResult)(nil), "im_protocol.PushResult")
	proto.RegisterType((*ShieldStatus)(nil), "im_protocol.ShieldStatus")
	proto.RegisterType((*OfflineFileInfo)(nil), "im_protocol.OfflineFileInfo")
	proto.RegisterType((*DepartInfo)(nil), "im_protocol.DepartInfo")
	proto.RegisterType((*PushShieldStatus)(nil), "im_protocol.PushShieldStatus")
}

func init() {
	proto.RegisterFile("protobuf/proto/include/IM.BaseDefine.proto", fileDescriptor_a07aeb8a03a36862)
}

var fileDescriptor_a07aeb8a03a36862 = []byte{
	// 3155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0xdb, 0x6f, 0x1b, 0xc7,
	0xd5, 0x0f, 0x29, 0x8a, 0xa2, 0x8e, 0x28, 0x6a, 0x34, 0xd6, 0xd5, 0x8e, 0x6d, 0x59, 0x76, 0x62,
	0x87, 0x89, 0xe5, 0x2f, 0x4e, 0xbe, 0x0f, 0x1f, 0xd0, 0xbe, 0xac, 0xb8, 0x23, 0x69, 0xa1, 0xe5,
	0x2e, 0xb3, 0xbb, 0x94, 0xeb, 0x27, 0x82, 0x21, 0x57, 0xf2, 0xd6, 0xbc, 0x08, 0xcb, 0x55, 0x0a,
	0xe7, 0xa1, 0x80, 0xef, 0xf7, 0xdc, 0xda, 0xa6, 0x40, 0x1f, 0xdb, 0xf7, 0xa2, 0x97, 0x14, 0xfd,
	0x13, 0xda, 0x87, 0xfe, 0x07, 0x7d, 0x2a, 0xfa, 0x77, 0x14, 0x28, 0xe6, 0xcc, 0x0c, 0xb9, 0x4b,
	0xd2, 0xb4, 0x51, 0x34, 0x6f, 0x9a, 0xf3, 0x3b, 0xf7, 0x73, 0xe6, 0xcc, 0xe1, 0xda, 0x50, 0x3c,
	0x0e, 0xbb, 0x51, 0xf7, 0xd3, 0x93, 0xc3, 0x6b, 0xf8, 0xc7, 0xb5, 0xa0, 0xd3, 0x68, 0x9d, 0x34,
	0xfd, 0x6b, 0x46, 0x79, 0x6b, 0xbb, 0xde, 0xf3, 0x75, 0xff, 0x30, 0xe8, 0xf8, 0x5b, 0x88, 0xd1,
	0xb9, 0xa0, 0x5d, 0xc3, 0xbf, 0x1a, 0xdd, 0xd6, 0xe6, 0x07, 0x90, 0x35, 0x8e, 0xb5, 0x66, 0x33,
	0xa4, 0x05, 0x48, 0x07, 0xc7, 0x6b, 0xa9, 0x8d, 0xd4, 0x95, 0x59, 0x27, 0x1d, 0x1c, 0x53, 0x0a,
	0x99, 0xe3, 0x6e, 0x18, 0xad, 0xa5, 0x37, 0x52, 0x57, 0xe6, 0x1d, 0xfc, 0x7b, 0xf3, 0xef, 0x69,
	0xc8, 0x55, 0x7b, 0x7e, 0x68, 0x74, 0x0e, 0xbb, 0x74, 0x15, 0x66, 0x4e, 0x7a, 0x7e, 0x58, 0x0b,
	0x9a, 0x28, 0x35, 0xef, 0x64, 0xf9, 0xd1, 0x68, 0xd2, 0xf3, 0x30, 0x87, 0xc0, 0x91, 0xdf, 0x69,
	0xfa, 0xa1, 0x54, 0x00, 0x9c, 0xb4, 0x8b, 0x14, 0x7a, 0x09, 0x0a, 0xc8, 0xd0, 0x09, 0x1a, 0xb7,
	0x6b, 0x9d, 0x7a, 0xdb, 0x5f, 0x9b, 0x42, 0xb3, 0x79, 0x4e, 0xb5, 0x82, 0xc6, 0x6d, 0xab, 0xde,
	0xf6, 0xe9, 0x59, 0x80, 0xfa, 0x67, 0xf5, 0xa8, 0x1e, 0xd6, 0x4e, 0xc2, 0xd6, 0x5a, 0x06, 0x39,
	0x66, 0x05, 0xa5, 0x1a, 0xb6, 0xe8, 0x45, 0x98, 0x6f, 0xfa, 0xc7, 0xf5, 0x30, 0x6a, 0xfb, 0x9d,
	0x88, 0x3b, 0x31, 0x8d, 0x76, 0xf2, 0x03, 0xa2, 0xd1, 0xa4, 0x4b, 0x30, 0xed, 0xb7, 0xeb, 0x41,
	0x6b, 0x2d, 0x8b, 0xe2, 0xe2, 0xd0, 0xb7, 0x1f, 0xfa, 0xf5, 0x96, 0xb0, 0x3f, 0x33, 0xb0, 0xef,
	0xf8, 0xf5, 0x16, 0xda, 0x5f, 0x87, 0x1c, 0x72, 0x45, 0x7e, 0x6b, 0x2d, 0x87, 0x38, 0xc6, 0xeb,
	0xf9, 0xad, 0x7e, 0x84, 0xcd, 0x6e, 0xbb, 0x1e, 0x74, 0xd6, 0x66, 0x11, 0xc5, 0x08, 0x75, 0xa4,
	0xd0, 0x15, 0xc8, 0xf6, 0xa2, 0x7a, 0x74, 0xd2, 0x5b, 0x03, 0x91, 0x1a, 0x71, 0xa2, 0x67, 0x60,
	0xb6, 0x17, 0x1c, 0x75, 0x6a, 0x41, 0xe7, 0xb0, 0xbb, 0x36, 0x87, 0x62, 0x39, 0x4e, 0xe0, 0x09,
	0xdd, 0xfc, 0xd5, 0x14, 0xd0, 0x52, 0xb7, 0x13, 0xd5, 0x1b, 0x91, 0xeb, 0xf7, 0x7a, 0x41, 0x17,
	0xc9, 0x3c, 0x0f, 0x3d, 0x71, 0x1c, 0xa4, 0x7a, 0x56, 0x52, 0x8c, 0x26, 0xfd, 0x01, 0xe4, 0x15,
	0x1c, 0xdd, 0x39, 0xf6, 0x31, 0xdd, 0x85, 0xeb, 0x6b, 0x5b, 0xb1, 0x2a, 0x6f, 0x49, 0x75, 0xde,
	0x9d, 0x63, 0xdf, 0x99, 0xeb, 0x0d, 0x0e, 0x94, 0x41, 0x41, 0x09, 0x4b, 0x7f, 0xa7, 0x50, 0xfc,
	0xdc, 0x38, 0x71, 0x17, 0x39, 0x50, 0xc9, 0x7c, 0x2f, 0x4e, 0xa2, 0x17, 0x20, 0x7f, 0x72, 0xdc,
	0xac, 0x47, 0x7e, 0xb3, 0x16, 0x05, 0x6d, 0x1f, 0x8b, 0x35, 0xef, 0xcc, 0x49, 0x9a, 0x17, 0xb4,
	0x7d, 0xba, 0x09, 0xf3, 0xad, 0x7a, 0xe4, 0xf7, 0xa2, 0x5a, 0xbb, 0x77, 0x34, 0x28, 0xd7, 0x9c,
	0x20, 0x96, 0x7b, 0x47, 0x46, 0x93, 0xbe, 0x0b, 0x0b, 0x31, 0x9e, 0x66, 0x3d, 0xaa, 0x63, 0xdd,
	0xf2, 0xce, 0x7c, 0x9f, 0x4b, 0xaf, 0x47, 0x75, 0xfa, 0xc3, 0x04, 0x1f, 0x46, 0x3d, 0x83, 0x6e,
	0x2f, 0x25, 0xdc, 0x2e, 0xf7, 0x8e, 0x84, 0xb3, 0x7d, 0x69, 0x8c, 0xf9, 0x63, 0x58, 0x8d, 0x49,
	0x1f, 0x86, 0xdd, 0x76, 0x4d, 0xf5, 0x71, 0x0e, 0x7d, 0x3a, 0xd5, 0xe7, 0xdf, 0x09, 0xbb, 0x6d,
	0xec, 0xf7, 0xe6, 0xe6, 0x81, 0xe8, 0x7c, 0x1e, 0xf0, 0xab, 0x3b, 0xff, 0xc3, 0x7e, 0xd9, 0x45,
	0x15, 0xd6, 0x13, 0xfe, 0x28, 0x79, 0x74, 0x4a, 0x32, 0x6e, 0x7e, 0x9b, 0x82, 0x82, 0xeb, 0x87,
	0x9f, 0xf9, 0xe1, 0xf7, 0xa1, 0x9e, 0xfe, 0x3f, 0xcc, 0x35, 0x5a, 0x01, 0xbf, 0x21, 0x98, 0x26,
	0x51, 0xdd, 0xd5, 0x84, 0x5c, 0x09, 0x71, 0x94, 0x82, 0x46, 0xff, 0xef, 0xcd, 0xbf, 0xa4, 0x01,
	0xaa, 0x9d, 0xd0, 0xaf, 0x37, 0xbf, 0xf7, 0x2e, 0x3c, 0x0b, 0x70, 0x82, 0x96, 0x6a, 0x8d, 0x4e,
	0x84, 0x3e, 0xce, 0x3b, 0xb3, 0x82, 0x52, 0xea, 0x44, 0xa3, 0xad, 0x93, 0x79, 0xa3, 0xd6, 0x99,
	0x7e, 0xc3, 0xd6, 0xc9, 0xfe, 0x57, 0x5a, 0x67, 0xe6, 0xd5, 0xad, 0xf3, 0xa7, 0x14, 0xcc, 0x70,
	0x2f, 0x79, 0x1a, 0x97, 0x21, 0x2b, 0x83, 0x10, 0x29, 0x9c, 0x6e, 0x2b, 0xf7, 0x51, 0x5b, 0x2c,
	0xc5, 0x62, 0x6c, 0xce, 0x73, 0xb2, 0xdb, 0x4f, 0xf3, 0x79, 0x98, 0x6b, 0x84, 0x7e, 0x3d, 0xf2,
	0xc5, 0x3d, 0x13, 0xa9, 0x02, 0x41, 0xc2, 0x6b, 0x76, 0x0d, 0x72, 0xfd, 0xc0, 0x32, 0x13, 0x02,
	0x9b, 0x69, 0xcb, 0x90, 0xd6, 0x85, 0x40, 0x2c, 0x63, 0x1c, 0xe2, 0xb9, 0xda, 0xdc, 0x05, 0xb2,
	0x1b, 0x76, 0x4f, 0x8e, 0x0f, 0xfc, 0xb0, 0x3f, 0x8c, 0xd6, 0x21, 0x77, 0xc4, 0x69, 0x83, 0x08,
	0x66, 0xf0, 0x6c, 0x34, 0xe9, 0x1a, 0xcc, 0x7c, 0x26, 0x38, 0xa5, 0xef, 0xea, 0xb8, 0xf9, 0x5d,
	0x1a, 0x66, 0x51, 0xd3, 0x7f, 0xac, 0x82, 0xb7, 0x88, 0x10, 0x8a, 0x3d, 0x17, 0xb3, 0x48, 0xc1,
	0x59, 0x7d, 0x01, 0xf2, 0x02, 0x16, 0xef, 0x83, 0x7c, 0x2d, 0xe6, 0x90, 0xa6, 0x21, 0x89, 0x5e,
	0x01, 0x22, 0x58, 0x30, 0x5b, 0xdd, 0x70, 0x30, 0x83, 0x0a, 0x48, 0x2f, 0x09, 0xb2, 0xd1, 0xa4,
	0xff, 0xab, 0x6c, 0xc5, 0xda, 0x63, 0x25, 0x91, 0x45, 0x0c, 0x06, 0xf3, 0x28, 0x7c, 0xc0, 0x4c,
	0x5e, 0x84, 0xf9, 0xde, 0xad, 0xc0, 0x6f, 0x35, 0xd5, 0x28, 0x15, 0x2d, 0x91, 0x17, 0x44, 0x39,
	0x29, 0x8b, 0xb0, 0x28, 0x74, 0xb7, 0xfd, 0xf6, 0xa7, 0x7e, 0x58, 0x6b, 0x05, 0xbd, 0x68, 0x2d,
	0xb7, 0x31, 0x75, 0x65, 0xde, 0x59, 0x40, 0xa0, 0x8c, 0x74, 0x33, 0xe8, 0x45, 0x9b, 0xbf, 0x4b,
	0xc1, 0x3c, 0x6f, 0x21, 0xaf, 0x7b, 0xdb, 0xef, 0x4c, 0x7e, 0x72, 0x3f, 0x86, 0x59, 0xf1, 0x56,
	0x0d, 0xee, 0xde, 0x2b, 0x2f, 0x39, 0xbe, 0x6a, 0xe8, 0xf1, 0x12, 0x4c, 0x47, 0x5c, 0xb7, 0xcc,
	0xa7, 0x38, 0xf0, 0x54, 0x1f, 0x9f, 0xf4, 0x6e, 0xd5, 0x1a, 0xdd, 0x93, 0x4e, 0x24, 0xef, 0xda,
	0x2c, 0xa7, 0x94, 0x38, 0x81, 0x3f, 0x61, 0x08, 0xa3, 0x29, 0x91, 0xc0, 0x1c, 0x27, 0xe0, 0xd0,
	0x30, 0x01, 0x2a, 0x27, 0xbd, 0x5b, 0x8e, 0xdf, 0x3b, 0x69, 0x45, 0x78, 0xaf, 0xd1, 0x2b, 0x34,
	0x22, 0x56, 0x0b, 0xf4, 0x13, 0x23, 0xe2, 0xcd, 0x1c, 0x22, 0x63, 0xad, 0xd1, 0x6d, 0xfa, 0x6a,
	0x4f, 0x10, 0xa4, 0x52, 0xb7, 0xe9, 0x6f, 0x1e, 0x41, 0xde, 0x8d, 0x27, 0xef, 0x95, 0xe1, 0xc7,
	0x5b, 0x2a, 0x9d, 0x6c, 0xa9, 0x91, 0xaa, 0x4c, 0x8d, 0x56, 0x65, 0xf3, 0x51, 0x0a, 0x16, 0xec,
	0xc3, 0xc3, 0x56, 0xd0, 0xf1, 0x77, 0x82, 0x96, 0x8f, 0xb9, 0xde, 0x80, 0x7c, 0xe2, 0x82, 0x0b,
	0x8b, 0x70, 0xd8, 0xbf, 0xd7, 0xdc, 0x9d, 0xa8, 0xde, 0xbb, 0xad, 0x8c, 0xce, 0x3a, 0x59, 0x7e,
	0x34, 0x9a, 0x3c, 0x45, 0x87, 0x41, 0xcb, 0x8f, 0xf7, 0x6a, 0x8e, 0x13, 0xb0, 0x55, 0x15, 0xd8,
	0x0b, 0x3e, 0x57, 0x0f, 0x25, 0x82, 0x6e, 0xf0, 0xb9, 0xbf, 0xf9, 0xd7, 0x14, 0x80, 0x8e, 0x0b,
	0x8c, 0xaa, 0x77, 0xd3, 0x3f, 0x8e, 0x62, 0x01, 0xf3, 0xa3, 0xd1, 0xa4, 0xa7, 0x21, 0x77, 0x1c,
	0x06, 0xdd, 0x30, 0x88, 0xee, 0xc8, 0x80, 0xfb, 0x67, 0x6e, 0x00, 0x85, 0xe2, 0xd6, 0x39, 0x01,
	0xad, 0x5f, 0x82, 0xc2, 0x71, 0x3d, 0xe4, 0xef, 0x81, 0x52, 0x2c, 0x5c, 0xc8, 0x0b, 0xaa, 0x2e,
	0xd4, 0x6f, 0xc3, 0x1c, 0xc2, 0x32, 0x65, 0xd3, 0xd8, 0x50, 0x17, 0x12, 0x0d, 0xa5, 0xf7, 0xd7,
	0xac, 0xd8, 0x5a, 0x00, 0x5c, 0x4a, 0xe6, 0xb4, 0x02, 0x84, 0xb7, 0xc2, 0x9b, 0x15, 0x70, 0xa4,
	0x4a, 0xe9, 0xd1, 0x2a, 0x15, 0x7f, 0x9d, 0x82, 0x59, 0xfe, 0x54, 0x06, 0x0d, 0xdf, 0xd0, 0xe9,
	0x02, 0xcc, 0xb9, 0x86, 0x5e, 0xab, 0x5a, 0xfb, 0x96, 0x7d, 0xc3, 0x22, 0x6f, 0xd1, 0x79, 0x98,
	0xe5, 0x04, 0xd3, 0xde, 0x35, 0x2c, 0x92, 0xa2, 0x14, 0x0a, 0xfc, 0xb8, 0x5d, 0xd5, 0xf5, 0x9b,
	0x35, 0xd3, 0x70, 0x3d, 0x92, 0xa6, 0x73, 0x30, 0xc3, 0x69, 0x65, 0x77, 0x97, 0x4c, 0x29, 0xfe,
	0x5d, 0xc7, 0xae, 0x56, 0x48, 0x86, 0xe6, 0x21, 0xc7, 0x8f, 0x3b, 0x86, 0xc9, 0xc8, 0x34, 0x5d,
	0x01, 0xca, 0x4f, 0xee, 0x0d, 0xc3, 0x2b, 0xed, 0xd5, 0x5c, 0xe6, 0x1c, 0x18, 0x25, 0x46, 0xb2,
	0x4a, 0xc8, 0xf6, 0xf6, 0x98, 0x43, 0x66, 0x28, 0x81, 0x3c, 0x3f, 0x1a, 0x96, 0xc7, 0x1c, 0x4b,
	0x33, 0x49, 0xae, 0xf8, 0xaf, 0x29, 0x00, 0xb3, 0x7b, 0x14, 0x74, 0x4a, 0xed, 0xa6, 0xa1, 0xd3,
	0x65, 0x58, 0x2c, 0x29, 0xa7, 0x62, 0xbe, 0xbe, 0x0d, 0xab, 0x03, 0xb2, 0xc3, 0x3e, 0xe1, 0x2e,
	0x71, 0x23, 0xcc, 0x21, 0x77, 0xd3, 0xc3, 0xa8, 0x1b, 0x43, 0xef, 0xa5, 0x47, 0x65, 0xab, 0x2e,
	0x73, 0x44, 0xd4, 0xf7, 0xc7, 0xc8, 0x0e, 0xd0, 0x07, 0x69, 0x7a, 0x06, 0x56, 0x92, 0xb2, 0xf8,
	0x97, 0x5d, 0xf5, 0xc8, 0xc3, 0x11, 0xd0, 0x1d, 0x80, 0x8f, 0xd2, 0x74, 0x0d, 0x4e, 0x0d, 0xc0,
	0x7d, 0xa3, 0xb4, 0x8f, 0x8a, 0xc9, 0xe3, 0x34, 0x3d, 0x07, 0xeb, 0x49, 0x9d, 0x3a, 0xe3, 0xc9,
	0xf2, 0xec, 0x7d, 0x66, 0x91, 0x27, 0x23, 0xb8, 0x9b, 0xc0, 0x9f, 0xa6, 0xe9, 0x79, 0x38, 0x9d,
	0x94, 0xe7, 0xda, 0x2b, 0xa5, 0x92, 0x69, 0x30, 0xcb, 0x23, 0xcf, 0x46, 0x18, 0xdc, 0x24, 0xc3,
	0xf3, 0x31, 0x1e, 0x54, 0xaa, 0xee, 0x5e, 0xcd, 0xdd, 0x33, 0x98, 0xa9, 0x93, 0x17, 0x63, 0x3c,
	0x88, 0xe3, 0x2f, 0xd3, 0xf4, 0x12, 0x9c, 0x4f, 0xca, 0x7f, 0x52, 0x65, 0xce, 0xcd, 0x04, 0xd7,
	0x17, 0x23, 0x5c, 0xee, 0x18, 0xae, 0x2f, 0xd3, 0xc5, 0xdf, 0xce, 0x40, 0x61, 0xfb, 0xa4, 0xd9,
	0xbc, 0xc3, 0x47, 0xb8, 0xe8, 0x81, 0xd3, 0x22, 0xaf, 0x83, 0x4e, 0x8c, 0x35, 0xc2, 0x75, 0xb8,
	0x3a, 0x84, 0x39, 0xac, 0xc4, 0x2c, 0xaf, 0x56, 0xb2, 0x2d, 0x4f, 0x2b, 0x79, 0x35, 0x97, 0xb9,
	0xae, 0x61, 0xa3, 0x5b, 0x55, 0xe6, 0x7a, 0xe4, 0x6e, 0x86, 0x7e, 0x04, 0x5b, 0x6f, 0x2a, 0xe3,
	0x56, 0x6c, 0xcb, 0x65, 0xe4, 0x5e, 0x86, 0x5e, 0x80, 0xb7, 0x87, 0x84, 0x5c, 0x4f, 0xf3, 0xaa,
	0x6e, 0xcd, 0xb2, 0x3d, 0x63, 0xe7, 0x26, 0xb9, 0x9f, 0xa1, 0xef, 0xc0, 0xc6, 0xb0, 0x9f, 0x2e,
	0x73, 0x6a, 0x86, 0xb5, 0x63, 0xf7, 0xcd, 0x3f, 0xc8, 0xd0, 0x77, 0xe1, 0xc2, 0x04, 0x36, 0x69,
	0xf1, 0xe1, 0x38, 0x3e, 0x87, 0x95, 0xed, 0x03, 0x16, 0x0f, 0x89, 0x3c, 0x7a, 0x23, 0x3e, 0x97,
	0x3c, 0xce, 0xa8, 0xfc, 0xc7, 0xf8, 0x34, 0xd3, 0x14, 0xb6, 0x95, 0x77, 0x4f, 0xc6, 0x05, 0x11,
	0xe3, 0x92, 0xce, 0x3d, 0xcd, 0xd0, 0x2b, 0x70, 0x71, 0x4c, 0x10, 0xae, 0x4a, 0x8a, 0x52, 0xf8,
	0x2c, 0x43, 0xdf, 0x83, 0x4b, 0x93, 0x39, 0xa5, 0xd2, 0xe7, 0xe3, 0x58, 0x4b, 0x7b, 0x9a, 0xb5,
	0xcb, 0x6a, 0xda, 0x81, 0xe6, 0x69, 0x03, 0x37, 0x5f, 0x64, 0x68, 0x11, 0xde, 0x79, 0x0d, 0xab,
	0x54, 0xfb, 0x72, 0x1c, 0x6f, 0xa5, 0x24, 0xdb, 0x30, 0x59, 0xc3, 0x2f, 0xc6, 0xb9, 0x30, 0x94,
	0x4c, 0xc9, 0xfa, 0xe5, 0xb8, 0xbc, 0xeb, 0xac, 0xa2, 0x39, 0x5e, 0x99, 0xb7, 0x92, 0x72, 0xf5,
	0xab, 0x0c, 0xbd, 0x0c, 0x9b, 0x93, 0xf8, 0xa4, 0x9f, 0x5f, 0x8f, 0xb3, 0x2d, 0x83, 0x11, 0xa1,
	0xe9, 0xca, 0xf6, 0x37, 0x19, 0xfa, 0x01, 0x5c, 0x1e, 0x1f, 0xbe, 0x6b, 0xec, 0x5a, 0xc9, 0x8e,
	0xfb, 0x59, 0x86, 0x5e, 0x85, 0x2b, 0xaf, 0xe7, 0x96, 0x7e, 0xfc, 0x7c, 0x9c, 0xf2, 0x01, 0xdf,
	0x90, 0x2b, 0xbf, 0xc8, 0x14, 0xff, 0x3c, 0x05, 0xf9, 0xb2, 0xdf, 0xeb, 0xd5, 0x8f, 0x7c, 0x71,
	0x5d, 0x4f, 0xc1, 0x42, 0x49, 0x3c, 0x12, 0xb1, 0x7b, 0xba, 0x08, 0x79, 0x45, 0xd4, 0x35, 0x4f,
	0x23, 0x77, 0xb3, 0x74, 0x19, 0x48, 0x9c, 0x54, 0xd3, 0x4a, 0xfb, 0xe4, 0x5e, 0x82, 0xec, 0x30,
	0x4d, 0x47, 0xf2, 0xfd, 0xac, 0x9a, 0x9f, 0x7d, 0xb2, 0x74, 0xe0, 0x41, 0x96, 0xae, 0xc3, 0x92,
	0x42, 0x3c, 0xa3, 0xcc, 0xfa, 0x81, 0x3f, 0xcc, 0xd2, 0xd3, 0xb0, 0x3c, 0x04, 0xc9, 0x28, 0x1f,
	0x65, 0xd5, 0x54, 0x14, 0x6e, 0xa2, 0xca, 0x52, 0xac, 0x6e, 0x8f, 0xb3, 0x74, 0x03, 0xce, 0x8c,
	0x65, 0x90, 0x2a, 0x9e, 0x24, 0x2c, 0xcb, 0x56, 0x11, 0xc2, 0x4f, 0x13, 0x96, 0x25, 0x24, 0xc5,
	0x9e, 0x65, 0xe9, 0x26, 0x9c, 0x55, 0xd8, 0x2e, 0xf3, 0x6a, 0xa6, 0xe6, 0x31, 0xd7, 0xc3, 0xa3,
	0xa1, 0xe3, 0xa5, 0x7e, 0xfe, 0x3a, 0x1e, 0xb7, 0x42, 0x5e, 0x64, 0xd5, 0x58, 0x56, 0x3c, 0xdb,
	0x37, 0xe3, 0x3a, 0x5e, 0x4e, 0xc4, 0x5d, 0xf2, 0x45, 0xb6, 0xf8, 0x9b, 0x29, 0x00, 0xdc, 0xc4,
	0x13, 0x4f, 0x2d, 0xbe, 0xe7, 0xb1, 0xca, 0x49, 0x4f, 0x04, 0xd9, 0xb2, 0x9d, 0xb2, 0x66, 0x26,
	0xa3, 0xbd, 0x9b, 0xa3, 0x17, 0xe1, 0xdc, 0xab, 0x78, 0xd4, 0x04, 0xcd, 0xa9, 0xe7, 0x51, 0x30,
	0x25, 0x5a, 0xf4, 0x7e, 0x4e, 0x3d, 0xbb, 0x09, 0x50, 0x8a, 0x3e, 0xc8, 0xd1, 0xb3, 0xb0, 0x36,
	0x40, 0x4b, 0x0e, 0xd3, 0xbc, 0x58, 0x99, 0x73, 0x2a, 0xd0, 0x21, 0x58, 0x95, 0x3a, 0xa7, 0x26,
	0x9f, 0xc4, 0x45, 0xeb, 0x97, 0x59, 0x79, 0x3b, 0x36, 0xf9, 0x1e, 0xe7, 0xd4, 0xe4, 0x1b, 0xcf,
	0xa5, 0x8a, 0x3e, 0x14, 0xab, 0x78, 0xb7, 0xe4, 0xa1, 0x5f, 0xfe, 0x21, 0x8b, 0x43, 0x4c, 0xaa,
	0x11, 0x86, 0x54, 0x25, 0x2d, 0xca, 0xf6, 0x7e, 0x9e, 0x2b, 0xfe, 0x33, 0x0d, 0xb3, 0x7c, 0xa9,
	0x16, 0x45, 0x5a, 0x12, 0xb7, 0x83, 0x6f, 0x59, 0xb1, 0x1a, 0xad, 0x02, 0xed, 0x53, 0xfb, 0xaf,
	0x30, 0xb9, 0x0b, 0x63, 0x01, 0x97, 0xdc, 0x03, 0x7a, 0x0a, 0x0a, 0x7d, 0x80, 0x0f, 0x41, 0x46,
	0xee, 0x83, 0xaa, 0x10, 0x12, 0x2b, 0x55, 0xd3, 0x14, 0xf7, 0x92, 0xab, 0x7a, 0xf0, 0x4a, 0xd0,
	0xad, 0x90, 0x87, 0xa0, 0x2e, 0x2d, 0x82, 0x2a, 0x0d, 0x8f, 0x80, 0xae, 0x88, 0x96, 0x92, 0x64,
	0x19, 0xf8, 0x63, 0xa0, 0x4b, 0x62, 0x44, 0x20, 0x5d, 0x46, 0xfa, 0x04, 0x54, 0x95, 0x91, 0xba,
	0xa7, 0xb9, 0x35, 0x7b, 0x67, 0xc7, 0x34, 0x2c, 0x54, 0x48, 0x9e, 0x4e, 0x82, 0x5d, 0xf2, 0x2c,
	0x09, 0x6b, 0xba, 0x9e, 0x90, 0x7e, 0x9e, 0x84, 0x75, 0x66, 0x26, 0xe0, 0x17, 0x50, 0x64, 0x40,
	0xdd, 0x9f, 0x04, 0x51, 0xe3, 0x96, 0x5c, 0x90, 0x45, 0xb6, 0x57, 0x44, 0xfa, 0xe4, 0x16, 0x3b,
	0x92, 0x6f, 0x49, 0xaf, 0x5c, 0xaf, 0xd4, 0x4a, 0x65, 0x9d, 0xdc, 0xcd, 0x17, 0xff, 0x36, 0x0d,
	0x60, 0x47, 0xb7, 0xfc, 0x30, 0x71, 0xa5, 0x70, 0xdb, 0x8d, 0x89, 0xcb, 0x59, 0x26, 0xc8, 0x7b,
	0x4c, 0x73, 0xbc, 0x6d, 0xa6, 0x79, 0xe4, 0x6e, 0x41, 0x0d, 0x25, 0x81, 0xb8, 0x9e, 0xcd, 0xfb,
	0xa5, 0x74, 0x50, 0xab, 0x68, 0xa5, 0x7d, 0xe6, 0x91, 0x7b, 0x05, 0x55, 0x05, 0xc1, 0x70, 0xa0,
	0x99, 0x86, 0x2e, 0xef, 0x02, 0xb9, 0xff, 0x4a, 0xd0, 0xad, 0x90, 0x07, 0x05, 0xd5, 0x6c, 0x02,
	0xe4, 0xf3, 0x40, 0xac, 0x91, 0x35, 0xdc, 0x23, 0x51, 0xc3, 0xc3, 0xd7, 0x32, 0xb9, 0x15, 0xf2,
	0xa8, 0xa0, 0xa2, 0x17, 0x4c, 0x8e, 0xcd, 0x3b, 0x88, 0x79, 0xe4, 0xf1, 0x90, 0xf7, 0xb6, 0x85,
	0xf9, 0xed, 0xef, 0x36, 0xe4, 0x49, 0x41, 0xdd, 0x72, 0xc1, 0xc0, 0x87, 0x11, 0xdf, 0xca, 0x05,
	0xfa, 0xb4, 0xa0, 0x56, 0x2c, 0x99, 0x2d, 0x17, 0x33, 0x80, 0xcf, 0x73, 0xb5, 0xc2, 0x03, 0x21,
	0xcf, 0x0a, 0xea, 0xa6, 0xc7, 0x58, 0xf8, 0x4c, 0x96, 0xf8, 0xf3, 0xe1, 0xfc, 0xe1, 0xca, 0x1f,
	0x5b, 0xb6, 0x5f, 0x16, 0xd4, 0x34, 0x13, 0x0c, 0x63, 0x77, 0x80, 0x21, 0x25, 0xb8, 0x9e, 0x7a,
	0x76, 0x7f, 0x4f, 0x22, 0x5f, 0x4e, 0x64, 0x70, 0x2b, 0xe4, 0xab, 0x82, 0x6a, 0xb6, 0x41, 0x1a,
	0xe5, 0x08, 0xe0, 0xf2, 0x5f, 0x4f, 0x80, 0xdd, 0x0a, 0xf9, 0xa6, 0xa0, 0x1e, 0x1e, 0x01, 0x63,
	0xc3, 0x7a, 0x8e, 0x66, 0xb9, 0x3b, 0xd2, 0x81, 0xdf, 0x4f, 0xe6, 0x70, 0x2b, 0xe4, 0x0f, 0x43,
	0xb9, 0x14, 0xb7, 0x5c, 0x64, 0xc3, 0xc0, 0x39, 0x45, 0xfe, 0xf8, 0x1a, 0x16, 0xb7, 0x42, 0xbe,
	0x2b, 0x14, 0x7f, 0x99, 0x06, 0x10, 0xdf, 0x22, 0xf0, 0x7b, 0xc7, 0x0a, 0x50, 0x87, 0xed, 0x54,
	0x5d, 0xde, 0x70, 0x9a, 0x8b, 0xcb, 0x90, 0xc5, 0xc8, 0x5b, 0xf4, 0x3c, 0x9c, 0x19, 0xa6, 0xf7,
	0xab, 0xcb, 0x1c, 0x92, 0xa2, 0x17, 0xe0, 0x6c, 0x92, 0x61, 0x80, 0xd6, 0x76, 0xaa, 0xa6, 0x49,
	0xf8, 0x6f, 0x8c, 0xd3, 0x23, 0x3a, 0xf4, 0x6d, 0xa5, 0x62, 0x6a, 0x54, 0x85, 0x65, 0xab, 0xfa,
	0x09, 0x96, 0xcc, 0x58, 0x16, 0xc7, 0xae, 0x7a, 0x2a, 0x30, 0x32, 0x4d, 0x2f, 0xc1, 0x46, 0x92,
	0x45, 0xdf, 0x1e, 0x5c, 0x94, 0x1d, 0xcd, 0x30, 0x99, 0x4e, 0xb2, 0xa3, 0x8a, 0x0e, 0x98, 0x83,
	0xcb, 0x9f, 0x67, 0xdb, 0x35, 0xdb, 0xd4, 0xc9, 0x4c, 0xb1, 0x01, 0x85, 0xfd, 0xa0, 0x71, 0xdb,
	0xf1, 0xeb, 0x3d, 0xf9, 0x11, 0x76, 0x09, 0x08, 0x76, 0x5a, 0x32, 0x35, 0xe7, 0xe0, 0x74, 0x9c,
	0xaa, 0x57, 0x2b, 0xa6, 0x51, 0xe2, 0xc6, 0xb0, 0x21, 0x53, 0xf4, 0x0c, 0xac, 0xc6, 0xf1, 0xb2,
	0xbd, 0xcd, 0x0b, 0xc1, 0x49, 0x24, 0x5d, 0x2c, 0x43, 0xc1, 0xee, 0xb4, 0x82, 0x8e, 0xcf, 0x7f,
	0x0b, 0xc9, 0xaf, 0x8d, 0xcb, 0xf2, 0x5e, 0xe1, 0xf3, 0xea, 0xdd, 0xac, 0x30, 0x65, 0x69, 0x03,
	0xde, 0x1e, 0x81, 0x76, 0x1c, 0x83, 0x59, 0xba, 0xf8, 0xf5, 0x9e, 0x2a, 0xb6, 0x20, 0x1f, 0xff,
	0xc6, 0xcd, 0x3d, 0x8e, 0xdf, 0x32, 0xa9, 0x67, 0x05, 0x68, 0x9c, 0x2a, 0x74, 0x92, 0x14, 0x5d,
	0x85, 0x53, 0x09, 0xba, 0x98, 0x9f, 0x24, 0xcd, 0x87, 0x5c, 0x1c, 0x30, 0x99, 0x76, 0xc0, 0xc8,
	0x54, 0xb1, 0x0a, 0x73, 0xb1, 0x0f, 0xd6, 0x9c, 0x4b, 0xad, 0xd0, 0x71, 0xaf, 0x57, 0xe1, 0x54,
	0x82, 0xec, 0x1a, 0xd6, 0xae, 0xc9, 0xcd, 0xad, 0x00, 0x4d, 0x00, 0xe2, 0x33, 0x43, 0xba, 0xf8,
	0x40, 0x7c, 0x0c, 0x46, 0x9d, 0x8b, 0x30, 0x8f, 0xab, 0x5d, 0x4c, 0xdf, 0x1a, 0x2c, 0xf5, 0x49,
	0x42, 0x57, 0xcd, 0x63, 0x3f, 0xf2, 0x48, 0x8a, 0xa7, 0x6e, 0x18, 0xd1, 0xaa, 0xba, 0x61, 0x93,
	0x34, 0x77, 0xa2, 0x0f, 0x89, 0xc7, 0x18, 0x65, 0x16, 0x13, 0xda, 0x04, 0x20, 0x44, 0x68, 0xf1,
	0xa7, 0x00, 0x83, 0x4f, 0x82, 0xf8, 0x2a, 0xe3, 0xaf, 0xe9, 0xe1, 0xd8, 0xe2, 0xd4, 0x1b, 0x86,
	0xa5, 0xdb, 0x37, 0x5c, 0x92, 0xc2, 0x0d, 0x39, 0x06, 0x94, 0xb5, 0x12, 0x49, 0x0f, 0x13, 0x0d,
	0xdb, 0x25, 0x8b, 0xc3, 0x2a, 0x34, 0x4b, 0x77, 0x6c, 0x43, 0x27, 0xb4, 0xb8, 0x2f, 0xbf, 0x08,
	0xa3, 0xf9, 0x53, 0xb0, 0x20, 0xdd, 0x8e, 0x59, 0x5f, 0x86, 0xc5, 0x04, 0x91, 0x2f, 0x65, 0xe2,
	0xb3, 0x4e, 0x8c, 0xec, 0x95, 0x79, 0x4e, 0x1b, 0xb0, 0x80, 0xca, 0xca, 0xdd, 0x66, 0x70, 0x78,
	0x07, 0x55, 0x9e, 0x86, 0x15, 0xc1, 0x56, 0xb6, 0x75, 0x63, 0xe7, 0x66, 0x42, 0xf3, 0x3a, 0x2c,
	0x8f, 0x62, 0x9a, 0xae, 0x8b, 0x24, 0x8f, 0x42, 0x3a, 0x33, 0x49, 0xba, 0xe8, 0x02, 0xf1, 0xc2,
	0x7a, 0xa7, 0x77, 0xe8, 0x87, 0x7c, 0x9d, 0x41, 0x2b, 0x14, 0x0a, 0x62, 0x7a, 0xc5, 0xb4, 0x2f,
	0x01, 0x19, 0xd0, 0xfa, 0xdd, 0xb7, 0x0c, 0x8b, 0x31, 0xaa, 0xea, 0xbd, 0x62, 0x0f, 0x16, 0x44,
	0x19, 0xb8, 0x4a, 0xde, 0xd8, 0xe8, 0xb9, 0x4c, 0x99, 0x58, 0x55, 0x18, 0x8e, 0x4d, 0x4d, 0xbf,
	0x29, 0x7a, 0x3b, 0x8e, 0x95, 0x34, 0xab, 0xc4, 0x4c, 0xd1, 0x6c, 0x71, 0xba, 0xb8, 0xfc, 0x24,
	0x1d, 0xab, 0xab, 0xd8, 0x1b, 0xb8, 0x87, 0x53, 0xc5, 0x6f, 0x53, 0x50, 0x18, 0x58, 0x75, 0xba,
	0x2d, 0x7f, 0x98, 0x51, 0x86, 0x32, 0x70, 0xc5, 0x61, 0x9a, 0x89, 0xbf, 0x40, 0x5c, 0x66, 0xe9,
	0x78, 0xf1, 0xc7, 0x60, 0xfc, 0xa9, 0x67, 0x0e, 0x49, 0xf3, 0x2c, 0x4a, 0x4c, 0x6d, 0x29, 0xd5,
	0x8a, 0x69, 0x6b, 0x3a, 0x99, 0xe2, 0xf3, 0x62, 0x08, 0xd2, 0xed, 0x1b, 0x16, 0x82, 0x99, 0xe2,
	0x3f, 0x32, 0xb0, 0x80, 0x89, 0xc0, 0x7f, 0x0f, 0x63, 0x61, 0xd8, 0x0d, 0x79, 0x0b, 0xc7, 0x67,
	0x3b, 0x73, 0x1c, 0xcb, 0xae, 0xd9, 0xfb, 0xe4, 0x2d, 0x5a, 0x84, 0x77, 0x47, 0x11, 0xb9, 0x3d,
	0x7b, 0x9a, 0xbb, 0xcf, 0x7f, 0x29, 0x30, 0xc7, 0xb1, 0xb9, 0xb7, 0x97, 0xe1, 0xe2, 0x64, 0x5e,
	0xc1, 0x98, 0xa6, 0xef, 0xc1, 0x3b, 0xa3, 0x8c, 0x62, 0x4e, 0x1b, 0x16, 0x4e, 0x5a, 0xb1, 0x4b,
	0x90, 0x29, 0xfa, 0x3e, 0x5c, 0x1e, 0x65, 0x55, 0x4c, 0x38, 0x51, 0x76, 0x6c, 0x07, 0xb5, 0x93,
	0x0c, 0xfd, 0x18, 0xfe, 0x67, 0x94, 0x79, 0xb0, 0x86, 0xde, 0x30, 0xbc, 0xbd, 0x81, 0x01, 0xe1,
	0x3c, 0x99, 0xa6, 0x57, 0xe1, 0xbd, 0x49, 0x52, 0x86, 0x69, 0x1a, 0x4c, 0xdb, 0x95, 0xc3, 0x38,
	0x3b, 0xde, 0xa3, 0x01, 0x7b, 0x79, 0x5f, 0x37, 0x1c, 0x19, 0xe9, 0x0c, 0xbd, 0x06, 0xef, 0x4f,
	0x62, 0xb6, 0x2b, 0xcc, 0x12, 0xcd, 0x20, 0x04, 0x72, 0xf4, 0xff, 0xe0, 0xfa, 0x24, 0x01, 0xfc,
	0x85, 0x29, 0x96, 0x5b, 0xa6, 0xe9, 0x4c, 0x19, 0x9a, 0x7d, 0x9d, 0x21, 0xcd, 0x34, 0xed, 0x12,
	0xff, 0xd9, 0x20, 0x05, 0x80, 0x7e, 0x08, 0x57, 0x27, 0x09, 0xb8, 0x8c, 0xed, 0xf3, 0xee, 0x71,
	0x99, 0x27, 0x45, 0xe6, 0xe8, 0x15, 0xb8, 0x34, 0x49, 0x64, 0xc7, 0xb0, 0x0c, 0x77, 0x8f, 0xe9,
	0x24, 0x5f, 0x64, 0xb0, 0x38, 0xf2, 0xcf, 0xd9, 0xf1, 0xe1, 0xae, 0x9e, 0x87, 0x7d, 0x31, 0x28,
	0x86, 0xc8, 0x3a, 0x33, 0x99, 0xc7, 0x48, 0xaa, 0xb8, 0x0d, 0x4b, 0xe3, 0xbe, 0x80, 0xf3, 0x89,
	0xa0, 0xb3, 0x8a, 0x97, 0x50, 0xb3, 0x02, 0x34, 0x4e, 0x53, 0x3a, 0xb6, 0xd7, 0x61, 0xb5, 0xd1,
	0x6d, 0x6f, 0xb5, 0xbb, 0x47, 0x27, 0x3f, 0x0e, 0xfc, 0xad, 0x28, 0xda, 0x52, 0xff, 0x8b, 0xe3,
	0xd3, 0x2c, 0xfe, 0xf5, 0xd1, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x13, 0x87, 0x6a, 0xf2, 0xd8,
	0x21, 0x00, 0x00,
}
